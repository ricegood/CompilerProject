State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 @2: %empty

   14 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}'
   15                 | STRUCT ID

   16 func_decl: type_specifier pointers ID '(' ')'
   17          | type_specifier pointers ID '(' VOID ')'

   18 @3: %empty

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 $@4: %empty

   33 compound_stmt: '{' $@4 local_defs stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'
   38     | compound_stmt
   39     | RETURN ';'
   40     | RETURN expr ';'
   41     | ';'
   42     | IF '(' expr ')' stmt
   43     | IF '(' expr ')' stmt ELSE stmt
   44     | WHILE '(' expr ')' stmt
   45     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   46     | BREAK ';'
   47     | CONTINUE ';'

   48 expr_e: expr
   49       | %empty

   50 const_expr: expr

   51 expr: unary '=' expr
   52     | or_expr

   53 or_expr: or_list

   54 or_list: or_list LOGICAL_OR and_expr
   55        | and_expr

   56 and_expr: and_list

   57 and_list: and_list LOGICAL_AND binary
   58         | binary

   59 binary: binary RELOP binary
   60       | binary EQUOP binary
   61       | binary '+' binary
   62       | binary '-' binary
   63       | unary

   64 unary: '(' expr ')'
   65      | '(' unary ')'
   66      | INTEGER_CONST
   67      | CHAR_CONST
   68      | STRING
   69      | ID
   70      | '-' unary
   71      | '!' unary
   72      | unary INCOP
   73      | unary DECOP
   74      | INCOP unary
   75      | DECOP unary
   76      | '&' unary
   77      | '*' unary
   78      | unary '[' expr ']'
   79      | unary '.' ID
   80      | unary STRUCTOP ID
   81      | unary '(' args ')'
   82      | unary '(' ')'

   83 args: expr
   84     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 71
'&' (38) 76
'(' (40) 16 17 19 42 43 44 45 64 65 81 82
')' (41) 16 17 19 42 43 44 45 64 65 81 82
'*' (42) 20 77
'+' (43) 61
',' (44) 23 84
'-' (45) 62 70
'.' (46) 79
';' (59) 4 5 6 7 28 29 30 31 37 39 40 41 45 46 47
'=' (61) 51
'[' (91) 5 25 29 78
']' (93) 5 25 29 78
'{' (123) 14 33
'}' (125) 14 33
error (256)
LOGICAL_OR (258) 54
LOGICAL_AND (259) 57
EQUOP (260) 60
RELOP (261) 59
INCOP (262) 72 74
DECOP (263) 73 75
STRUCTOP (264) 80
ELSE (265) 43
VOID (266) 10 17
STRUCT (267) 14 15
RETURN (268) 39 40
IF (269) 42 43
WHILE (270) 44
FOR (271) 45
BREAK (272) 46
CONTINUE (273) 47
CHAR_CONST (274) 67
STRING (275) 68
INTEGER_CONST (276) 66
ID (277) 4 5 14 15 16 17 19 24 25 28 29 69 79 80
TYPE (278) 9


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
ext_def_list (41)
    on left: 2 3, on right: 1 2
ext_def (42)
    on left: 4 5 6 7 8, on right: 2
type_specifier (43)
    on left: 9 10 11, on right: 4 5 7 16 17 19 24 25 28 29 30
struct_specifier (44)
    on left: 14 15, on right: 11
$@1 (45)
    on left: 12, on right: 14
@2 (46)
    on left: 13, on right: 14
func_decl (47)
    on left: 16 17 19, on right: 6 8 31
@3 (48)
    on left: 18, on right: 19
pointers (49)
    on left: 20 21, on right: 4 5 16 17 19 24 25 28 29
param_list (50)
    on left: 22 23, on right: 19 23
param_decl (51)
    on left: 24 25, on right: 22 23
def_list (52)
    on left: 26 27, on right: 14 26 34
def (53)
    on left: 28 29 30 31, on right: 26
compound_stmt (54)
    on left: 33, on right: 8 38
$@4 (55)
    on left: 32, on right: 33
local_defs (56)
    on left: 34, on right: 33
stmt_list (57)
    on left: 35 36, on right: 33 35
stmt (58)
    on left: 37 38 39 40 41 42 43 44 45 46 47, on right: 35 42 43 44
    45
expr_e (59)
    on left: 48 49, on right: 45
const_expr (60)
    on left: 50, on right: 5 25 29
expr (61)
    on left: 51 52, on right: 37 40 42 43 44 48 50 51 64 78 83 84
or_expr (62)
    on left: 53, on right: 52
or_list (63)
    on left: 54 55, on right: 53 54
and_expr (64)
    on left: 56, on right: 54 55
and_list (65)
    on left: 57 58, on right: 56 57
binary (66)
    on left: 59 60 61 62 63, on right: 57 58 59 60 61 62
unary (67)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82, on right: 51 63 65 70 71 72 73 74 75 76 77 78 79 80 81 82
args (68)
    on left: 83 84, on right: 81 84


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 5

   14 struct_specifier: STRUCT . ID '{' $@1 def_list @2 '}'
   15                 | STRUCT . ID

    ID  shift, and go to state 11


State 6

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   14 struct_specifier: STRUCT ID . '{' $@1 def_list @2 '}'
   15                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 15 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   33 compound_stmt: '{' . $@4 local_defs stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 20


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   14 struct_specifier: STRUCT ID '{' . $@1 def_list @2 '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 21


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 20

   33 compound_stmt: '{' $@4 . local_defs stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 25
    local_defs  go to state 26


State 21

   14 struct_specifier: STRUCT ID '{' $@1 . def_list @2 '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 27


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    const_expr  go to state 39
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 23

   16 func_decl: type_specifier pointers ID '(' . ')'
   17          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . @3 param_list ')'

    ')'   shift, and go to state 47
    VOID  shift, and go to state 48

    VOID      [reduce using rule 18 (@3)]
    $default  reduce using rule 18 (@3)

    @3  go to state 49


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   26 def_list: def_list . def
   34 local_defs: def_list .

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 50
    struct_specifier  go to state 9
    func_decl         go to state 51
    def               go to state 52


State 26

   33 compound_stmt: '{' $@4 local_defs . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 53


State 27

   14 struct_specifier: STRUCT ID '{' $@1 def_list . @2 '}'
   26 def_list: def_list . def

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 13 (@2)

    type_specifier    go to state 50
    struct_specifier  go to state 9
    @2                go to state 54
    func_decl         go to state 51
    def               go to state 52


State 28

   76 unary: '&' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    unary  go to state 55


State 29

   70 unary: '-' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    unary  go to state 56


State 30

   77 unary: '*' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    unary  go to state 57


State 31

   71 unary: '!' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    unary  go to state 58


State 32

   74 unary: INCOP . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    unary  go to state 59


State 33

   75 unary: DECOP . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    unary  go to state 60


State 34

   64 unary: '(' . expr ')'
   65      | '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 61
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 62


State 35

   67 unary: CHAR_CONST .

    $default  reduce using rule 67 (unary)


State 36

   68 unary: STRING .

    $default  reduce using rule 68 (unary)


State 37

   66 unary: INTEGER_CONST .

    $default  reduce using rule 66 (unary)


State 38

   69 unary: ID .

    $default  reduce using rule 69 (unary)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 63


State 40

   50 const_expr: expr .

    $default  reduce using rule 50 (const_expr)


State 41

   52 expr: or_expr .

    $default  reduce using rule 52 (expr)


State 42

   53 or_expr: or_list .
   54 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 64

    $default  reduce using rule 53 (or_expr)


State 43

   55 or_list: and_expr .

    $default  reduce using rule 55 (or_list)


State 44

   56 and_expr: and_list .
   57 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 65

    $default  reduce using rule 56 (and_expr)


State 45

   58 and_list: binary .
   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 58 (and_list)


State 46

   51 expr: unary . '=' expr
   63 binary: unary .
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    '='       shift, and go to state 70
    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 63 (binary)


State 47

   16 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 16 (func_decl)


State 48

   17 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 77


State 49

   19 func_decl: type_specifier pointers ID '(' @3 . param_list ')'

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_list        go to state 79
    param_decl        go to state 80


State 50

   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 81

    $default  reduce using rule 21 (pointers)

    pointers  go to state 82


State 51

   31 def: func_decl . ';'

    ';'  shift, and go to state 83


State 52

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 53

   33 compound_stmt: '{' $@4 local_defs stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    RETURN         shift, and go to state 84
    IF             shift, and go to state 85
    WHILE          shift, and go to state 86
    FOR            shift, and go to state 87
    BREAK          shift, and go to state 88
    CONTINUE       shift, and go to state 89
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38
    ';'            shift, and go to state 90
    '{'            shift, and go to state 16
    '}'            shift, and go to state 91

    compound_stmt  go to state 92
    stmt           go to state 93
    expr           go to state 94
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 54

   14 struct_specifier: STRUCT ID '{' $@1 def_list @2 . '}'

    '}'  shift, and go to state 95


State 55

   72 unary: unary . INCOP
   73      | unary . DECOP
   76      | '&' unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 76 (unary)


State 56

   70 unary: '-' unary .
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 70 (unary)


State 57

   72 unary: unary . INCOP
   73      | unary . DECOP
   77      | '*' unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 77 (unary)


State 58

   71 unary: '!' unary .
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 71 (unary)


State 59

   72 unary: unary . INCOP
   73      | unary . DECOP
   74      | INCOP unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 74 (unary)


State 60

   72 unary: unary . INCOP
   73      | unary . DECOP
   75      | DECOP unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 75 (unary)


State 61

   64 unary: '(' expr . ')'

    ')'  shift, and go to state 96


State 62

   51 expr: unary . '=' expr
   63 binary: unary .
   65 unary: '(' unary . ')'
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    '='       shift, and go to state 70
    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    ')'       shift, and go to state 97
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 63 (binary)


State 63

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 98


State 64

   54 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    and_expr  go to state 99
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 100


State 65

   57 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    binary  go to state 101
    unary   go to state 100


State 66

   60 binary: binary EQUOP . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    binary  go to state 102
    unary   go to state 100


State 67

   59 binary: binary RELOP . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    binary  go to state 103
    unary   go to state 100


State 68

   61 binary: binary '+' . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    binary  go to state 104
    unary   go to state 100


State 69

   62 binary: binary '-' . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    binary  go to state 105
    unary   go to state 100


State 70

   51 expr: unary '=' . expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 106
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 71

   72 unary: unary INCOP .

    $default  reduce using rule 72 (unary)


State 72

   73 unary: unary DECOP .

    $default  reduce using rule 73 (unary)


State 73

   78 unary: unary '[' . expr ']'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 107
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 74

   81 unary: unary '(' . args ')'
   82      | unary '(' . ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ')'            shift, and go to state 108
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 109
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 110


State 75

   79 unary: unary '.' . ID

    ID  shift, and go to state 111


State 76

   80 unary: unary STRUCTOP . ID

    ID  shift, and go to state 112


State 77

   17 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 17 (func_decl)


State 78

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 113


State 79

   19 func_decl: type_specifier pointers ID '(' @3 param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 114
    ')'  shift, and go to state 115


State 80

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 81

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 82

   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 116


State 83

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 84

   39 stmt: RETURN . ';'
   40     | RETURN . expr ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38
    ';'            shift, and go to state 117

    expr      go to state 118
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 85

   42 stmt: IF . '(' expr ')' stmt
   43     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 119


State 86

   44 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 120


State 87

   45 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 121


State 88

   46 stmt: BREAK . ';'

    ';'  shift, and go to state 122


State 89

   47 stmt: CONTINUE . ';'

    ';'  shift, and go to state 123


State 90

   41 stmt: ';' .

    $default  reduce using rule 41 (stmt)


State 91

   33 compound_stmt: '{' $@4 local_defs stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 92

   38 stmt: compound_stmt .

    $default  reduce using rule 38 (stmt)


State 93

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 94

   37 stmt: expr . ';'

    ';'  shift, and go to state 124


State 95

   14 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}' .

    $default  reduce using rule 14 (struct_specifier)


State 96

   64 unary: '(' expr ')' .

    $default  reduce using rule 64 (unary)


State 97

   65 unary: '(' unary ')' .

    $default  reduce using rule 65 (unary)


State 98

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 99

   54 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 54 (or_list)


State 100

   63 binary: unary .
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 63 (binary)


State 101

   57 and_list: and_list LOGICAL_AND binary .
   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 57 (and_list)


State 102

   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   60       | binary EQUOP binary .
   61       | binary . '+' binary
   62       | binary . '-' binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 60 (binary)


State 103

   59 binary: binary . RELOP binary
   59       | binary RELOP binary .
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 59 (binary)


State 104

   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   61       | binary '+' binary .
   62       | binary . '-' binary

    $default  reduce using rule 61 (binary)


State 105

   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary
   62       | binary '-' binary .

    $default  reduce using rule 62 (binary)


State 106

   51 expr: unary '=' expr .

    $default  reduce using rule 51 (expr)


State 107

   78 unary: unary '[' expr . ']'

    ']'  shift, and go to state 125


State 108

   82 unary: unary '(' ')' .

    $default  reduce using rule 82 (unary)


State 109

   83 args: expr .

    $default  reduce using rule 83 (args)


State 110

   81 unary: unary '(' args . ')'
   84 args: args . ',' expr

    ','  shift, and go to state 126
    ')'  shift, and go to state 127


State 111

   79 unary: unary '.' ID .

    $default  reduce using rule 79 (unary)


State 112

   80 unary: unary STRUCTOP ID .

    $default  reduce using rule 80 (unary)


State 113

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 128


State 114

   23 param_list: param_list ',' . param_decl

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_decl        go to state 129


State 115

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 116

   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 130
    '('  shift, and go to state 23
    ';'  shift, and go to state 131


State 117

   39 stmt: RETURN ';' .

    $default  reduce using rule 39 (stmt)


State 118

   40 stmt: RETURN expr . ';'

    ';'  shift, and go to state 132


State 119

   42 stmt: IF '(' . expr ')' stmt
   43     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 133
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 120

   44 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 134
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 121

   45 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    $default  reduce using rule 49 (expr_e)

    expr_e    go to state 135
    expr      go to state 136
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 122

   46 stmt: BREAK ';' .

    $default  reduce using rule 46 (stmt)


State 123

   47 stmt: CONTINUE ';' .

    $default  reduce using rule 47 (stmt)


State 124

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 125

   78 unary: unary '[' expr ']' .

    $default  reduce using rule 78 (unary)


State 126

   84 args: args ',' . expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    expr      go to state 137
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 127

   81 unary: unary '(' args ')' .

    $default  reduce using rule 81 (unary)


State 128

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 138

    $default  reduce using rule 24 (param_decl)


State 129

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 130

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    const_expr  go to state 139
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 131

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 132

   40 stmt: RETURN expr ';' .

    $default  reduce using rule 40 (stmt)


State 133

   42 stmt: IF '(' expr . ')' stmt
   43     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 140


State 134

   44 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 141


State 135

   45 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 142


State 136

   48 expr_e: expr .

    $default  reduce using rule 48 (expr_e)


State 137

   84 args: args ',' expr .

    $default  reduce using rule 84 (args)


State 138

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    const_expr  go to state 143
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 139

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 144


State 140

   42 stmt: IF '(' expr ')' . stmt
   43     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    RETURN         shift, and go to state 84
    IF             shift, and go to state 85
    WHILE          shift, and go to state 86
    FOR            shift, and go to state 87
    BREAK          shift, and go to state 88
    CONTINUE       shift, and go to state 89
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38
    ';'            shift, and go to state 90
    '{'            shift, and go to state 16

    compound_stmt  go to state 92
    stmt           go to state 145
    expr           go to state 94
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 141

   44 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    RETURN         shift, and go to state 84
    IF             shift, and go to state 85
    WHILE          shift, and go to state 86
    FOR            shift, and go to state 87
    BREAK          shift, and go to state 88
    CONTINUE       shift, and go to state 89
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38
    ';'            shift, and go to state 90
    '{'            shift, and go to state 16

    compound_stmt  go to state 92
    stmt           go to state 146
    expr           go to state 94
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 142

   45 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    $default  reduce using rule 49 (expr_e)

    expr_e    go to state 147
    expr      go to state 136
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 143

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 148


State 144

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 149


State 145

   42 stmt: IF '(' expr ')' stmt .
   43     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 150

    $default  reduce using rule 42 (stmt)


State 146

   44 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 44 (stmt)


State 147

   45 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 151


State 148

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 149

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 150

   43 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    RETURN         shift, and go to state 84
    IF             shift, and go to state 85
    WHILE          shift, and go to state 86
    FOR            shift, and go to state 87
    BREAK          shift, and go to state 88
    CONTINUE       shift, and go to state 89
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38
    ';'            shift, and go to state 90
    '{'            shift, and go to state 16

    compound_stmt  go to state 92
    stmt           go to state 152
    expr           go to state 94
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 151

   45 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38

    $default  reduce using rule 49 (expr_e)

    expr_e    go to state 153
    expr      go to state 136
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 152

   43 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 43 (stmt)


State 153

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 154


State 154

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    RETURN         shift, and go to state 84
    IF             shift, and go to state 85
    WHILE          shift, and go to state 86
    FOR            shift, and go to state 87
    BREAK          shift, and go to state 88
    CONTINUE       shift, and go to state 89
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ID             shift, and go to state 38
    ';'            shift, and go to state 90
    '{'            shift, and go to state 16

    compound_stmt  go to state 92
    stmt           go to state 155
    expr           go to state 94
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 155

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 45 (stmt)
