Nonterminals useless in grammar

   const_expr


Rules useless in grammar

   89 const_expr: expr


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' unary ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@2: %empty

   14 @3: %empty

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'
   19          | type_specifier pointers ID '(' param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' unary ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' unary ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 $@4: %empty

   33 $@5: %empty

   34 compound_stmt: '{' $@4 local_defs $@5 stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN return_code_gen ';'
   41     | RETURN return_code_gen expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'

   49 return_code_gen: %empty

   50 expr_e: expr
   51       | %empty

   52 $@6: %empty

   53 expr: unary '=' $@6 expr
   54     | or_expr

   55 or_expr: or_list

   56 or_list: or_list LOGICAL_OR and_expr
   57        | and_expr

   58 and_expr: and_list

   59 and_list: and_list LOGICAL_AND binary
   60         | binary

   61 binary: binary RELOP binary
   62       | binary EQUOP binary
   63       | binary '+' binary
   64       | binary '-' binary
   65       | unary

   66 unary: '(' expr ')'
   67      | '(' unary ')'
   68      | INTEGER_CONST
   69      | CHAR_CONST
   70      | STRING
   71      | ID
   72      | '-' unary
   73      | '!' unary
   74      | unary INCOP
   75      | unary DECOP
   76      | INCOP unary
   77      | DECOP unary
   78      | '&' unary
   79      | '*' unary
   80      | unary '[' expr ']'
   81      | unary '.' ID
   82      | unary STRUCTOP ID
   83      | unary '(' codegen args ')'
   84      | unary '(' codegen ')'
   85      | NULL_TOKEN

   86 codegen: %empty

   87 args: expr
   88     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73
'&' (38) 78
'(' (40) 17 18 19 43 44 45 46 66 67 83 84
')' (41) 17 18 19 43 44 45 46 66 67 83 84
'*' (42) 20 79
'+' (43) 63
',' (44) 23 88
'-' (45) 64 72
'.' (46) 81
';' (59) 4 5 6 7 28 29 30 31 38 40 41 42 46 47 48
'=' (61) 53
'[' (91) 5 25 29 80
']' (93) 5 25 29 80
'{' (123) 15 34
'}' (125) 15 34
error (256)
LOGICAL_OR (258) 56
LOGICAL_AND (259) 59
EQUOP (260) 62
RELOP (261) 61
INCOP (262) 74 76
DECOP (263) 75 77
STRUCTOP (264) 82
ELSE (265) 44
STRUCT (266) 15 16
RETURN (267) 40 41
IF (268) 43 44
WHILE (269) 45
FOR (270) 46
BREAK (271) 47
CONTINUE (272) 48
CHAR_CONST (273) 69
STRING (274) 70
INTEGER_CONST (275) 68
ID (276) 4 5 15 16 17 18 19 24 25 28 29 71 81 82
TYPE (277) 10
VOID (278) 11 18
NULL_TOKEN (279) 85


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 9, on right: 2
$@1 (44)
    on left: 8, on right: 9
type_specifier (45)
    on left: 10 11 12, on right: 4 5 7 17 18 19 24 25 28 29 30
struct_specifier (46)
    on left: 15 16, on right: 12
$@2 (47)
    on left: 13, on right: 15
@3 (48)
    on left: 14, on right: 15
func_decl (49)
    on left: 17 18 19, on right: 6 9 31
pointers (50)
    on left: 20 21, on right: 4 5 17 18 19 24 25 28 29
param_list (51)
    on left: 22 23, on right: 19 23
param_decl (52)
    on left: 24 25, on right: 22 23
def_list (53)
    on left: 26 27, on right: 15 26 35
def (54)
    on left: 28 29 30 31, on right: 26
compound_stmt (55)
    on left: 34, on right: 9 39
$@4 (56)
    on left: 32, on right: 34
$@5 (57)
    on left: 33, on right: 34
local_defs (58)
    on left: 35, on right: 34
stmt_list (59)
    on left: 36 37, on right: 34 36
stmt (60)
    on left: 38 39 40 41 42 43 44 45 46 47 48, on right: 36 43 44 45
    46
return_code_gen (61)
    on left: 49, on right: 40 41
expr_e (62)
    on left: 50 51, on right: 46
expr (63)
    on left: 53 54, on right: 38 41 43 44 45 50 53 66 80 87 88
$@6 (64)
    on left: 52, on right: 53
or_expr (65)
    on left: 55, on right: 54
or_list (66)
    on left: 56 57, on right: 55 56
and_expr (67)
    on left: 58, on right: 56 57
and_list (68)
    on left: 59 60, on right: 58 59
binary (69)
    on left: 61 62 63 64 65, on right: 59 60 61 62 63 64
unary (70)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84 85, on right: 5 25 29 53 65 67 72 73 74 75 76 77 78 79 80 81
    82 83 84
codegen (71)
    on left: 86, on right: 83 84
args (72)
    on left: 87 88, on right: 83 88


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   15 struct_specifier: STRUCT . ID '{' $@2 def_list @3 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 5

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 6

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' unary ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' $@2 def_list @3 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' unary ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   15 struct_specifier: STRUCT ID '{' . $@2 def_list @3 '}'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' unary ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   34 compound_stmt: '{' . $@4 local_defs $@5 stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 25


State 20

    9 ext_def: func_decl $@1 compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   15 struct_specifier: STRUCT ID '{' $@2 . def_list @3 '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 22

    5 ext_def: type_specifier pointers ID '[' . unary ']' ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 39


State 23

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 40
    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 41

    type_specifier    go to state 42
    struct_specifier  go to state 9
    param_list        go to state 43
    param_decl        go to state 44


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   34 compound_stmt: '{' $@4 . local_defs $@5 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 45
    local_defs  go to state 46


State 26

   15 struct_specifier: STRUCT ID '{' $@2 def_list . @3 '}'
   26 def_list: def_list . def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 14 (@3)

    type_specifier    go to state 47
    struct_specifier  go to state 9
    @3                go to state 48
    func_decl         go to state 49
    def               go to state 50


State 27

   78 unary: '&' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 51


State 28

   72 unary: '-' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 52


State 29

   79 unary: '*' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 53


State 30

   73 unary: '!' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 54


State 31

   76 unary: INCOP . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 55


State 32

   77 unary: DECOP . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 56


State 33

   66 unary: '(' . expr ')'
   67      | '(' . unary ')'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 57
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 63


State 34

   69 unary: CHAR_CONST .

    $default  reduce using rule 69 (unary)


State 35

   70 unary: STRING .

    $default  reduce using rule 70 (unary)


State 36

   68 unary: INTEGER_CONST .

    $default  reduce using rule 68 (unary)


State 37

   71 unary: ID .

    $default  reduce using rule 71 (unary)


State 38

   85 unary: NULL_TOKEN .

    $default  reduce using rule 85 (unary)


State 39

    5 ext_def: type_specifier pointers ID '[' unary . ']' ';'
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    ']'       shift, and go to state 67
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70


State 40

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 41

   11 type_specifier: VOID .
   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 71

    $default  reduce using rule 11 (type_specifier)


State 42

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' unary ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 72


State 43

   19 func_decl: type_specifier pointers ID '(' param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 73
    ')'  shift, and go to state 74


State 44

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 45

   26 def_list: def_list . def
   35 local_defs: def_list .

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 47
    struct_specifier  go to state 9
    func_decl         go to state 49
    def               go to state 50


State 46

   34 compound_stmt: '{' $@4 local_defs . $@5 stmt_list '}'

    $default  reduce using rule 33 ($@5)

    $@5  go to state 75


State 47

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' unary ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 76

    $default  reduce using rule 21 (pointers)

    pointers  go to state 77


State 48

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 . '}'

    '}'  shift, and go to state 78


State 49

   31 def: func_decl . ';'

    ';'  shift, and go to state 79


State 50

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 51

   74 unary: unary . INCOP
   75      | unary . DECOP
   78      | '&' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 78 (unary)


State 52

   72 unary: '-' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 72 (unary)


State 53

   74 unary: unary . INCOP
   75      | unary . DECOP
   79      | '*' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 79 (unary)


State 54

   73 unary: '!' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 73 (unary)


State 55

   74 unary: unary . INCOP
   75      | unary . DECOP
   76      | INCOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 76 (unary)


State 56

   74 unary: unary . INCOP
   75      | unary . DECOP
   77      | DECOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 77 (unary)


State 57

   66 unary: '(' expr . ')'

    ')'  shift, and go to state 80


State 58

   54 expr: or_expr .

    $default  reduce using rule 54 (expr)


State 59

   55 or_expr: or_list .
   56 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 81

    $default  reduce using rule 55 (or_expr)


State 60

   57 or_list: and_expr .

    $default  reduce using rule 57 (or_list)


State 61

   58 and_expr: and_list .
   59 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 82

    $default  reduce using rule 58 (and_expr)


State 62

   60 and_list: binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 83
    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 60 (and_list)


State 63

   53 expr: unary . '=' $@6 expr
   65 binary: unary .
   67 unary: '(' unary . ')'
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    '='       shift, and go to state 87
    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    ')'       shift, and go to state 88
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 65 (binary)


State 64

   74 unary: unary INCOP .

    $default  reduce using rule 74 (unary)


State 65

   75 unary: unary DECOP .

    $default  reduce using rule 75 (unary)


State 66

   80 unary: unary '[' . expr ']'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 89
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 67

    5 ext_def: type_specifier pointers ID '[' unary ']' . ';'

    ';'  shift, and go to state 91


State 68

   83 unary: unary '(' . codegen args ')'
   84      | unary '(' . codegen ')'

    $default  reduce using rule 86 (codegen)

    codegen  go to state 92


State 69

   81 unary: unary '.' . ID

    ID  shift, and go to state 93


State 70

   82 unary: unary STRUCTOP . ID

    ID  shift, and go to state 94


State 71

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 72

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' unary ']'

    ID  shift, and go to state 95


State 73

   23 param_list: param_list ',' . param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    type_specifier    go to state 42
    struct_specifier  go to state 9
    param_decl        go to state 96


State 74

   19 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 75

   34 compound_stmt: '{' $@4 local_defs $@5 . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 97


State 76

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 77

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' unary ']' ';'

    ID  shift, and go to state 98


State 78

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 79

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 80

   66 unary: '(' expr ')' .

    $default  reduce using rule 66 (unary)


State 81

   56 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    and_expr  go to state 99
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 100


State 82

   59 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 101
    unary   go to state 100


State 83

   62 binary: binary EQUOP . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 102
    unary   go to state 100


State 84

   61 binary: binary RELOP . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 103
    unary   go to state 100


State 85

   63 binary: binary '+' . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 104
    unary   go to state 100


State 86

   64 binary: binary '-' . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 105
    unary   go to state 100


State 87

   53 expr: unary '=' . $@6 expr

    $default  reduce using rule 52 ($@6)

    $@6  go to state 106


State 88

   67 unary: '(' unary ')' .

    $default  reduce using rule 67 (unary)


State 89

   80 unary: unary '[' expr . ']'

    ']'  shift, and go to state 107


State 90

   53 expr: unary . '=' $@6 expr
   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    '='       shift, and go to state 87
    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 65 (binary)


State 91

    5 ext_def: type_specifier pointers ID '[' unary ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 92

   83 unary: unary '(' codegen . args ')'
   84      | unary '(' codegen . ')'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    ')'            shift, and go to state 108
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 109
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90
    args      go to state 110


State 93

   81 unary: unary '.' ID .

    $default  reduce using rule 81 (unary)


State 94

   82 unary: unary STRUCTOP ID .

    $default  reduce using rule 82 (unary)


State 95

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' unary ']'

    '['  shift, and go to state 111

    $default  reduce using rule 24 (param_decl)


State 96

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 97

   34 compound_stmt: '{' $@4 local_defs $@5 stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 118
    '{'            shift, and go to state 19
    '}'            shift, and go to state 119

    compound_stmt  go to state 120
    stmt           go to state 121
    expr           go to state 122
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 98

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' unary ']' ';'

    '['  shift, and go to state 123
    '('  shift, and go to state 23
    ';'  shift, and go to state 124


State 99

   56 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 56 (or_list)


State 100

   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 65 (binary)


State 101

   59 and_list: and_list LOGICAL_AND binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 83
    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 59 (and_list)


State 102

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   62       | binary EQUOP binary .
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 62 (binary)


State 103

   61 binary: binary . RELOP binary
   61       | binary RELOP binary .
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86

    $default  reduce using rule 61 (binary)


State 104

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   63       | binary '+' binary .
   64       | binary . '-' binary

    $default  reduce using rule 63 (binary)


State 105

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary
   64       | binary '-' binary .

    $default  reduce using rule 64 (binary)


State 106

   53 expr: unary '=' $@6 . expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 125
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 107

   80 unary: unary '[' expr ']' .

    $default  reduce using rule 80 (unary)


State 108

   84 unary: unary '(' codegen ')' .

    $default  reduce using rule 84 (unary)


State 109

   87 args: expr .

    $default  reduce using rule 87 (args)


State 110

   83 unary: unary '(' codegen args . ')'
   88 args: args . ',' expr

    ','  shift, and go to state 126
    ')'  shift, and go to state 127


State 111

   25 param_decl: type_specifier pointers ID '[' . unary ']'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 128


State 112

   40 stmt: RETURN . return_code_gen ';'
   41     | RETURN . return_code_gen expr ';'

    $default  reduce using rule 49 (return_code_gen)

    return_code_gen  go to state 129


State 113

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 130


State 114

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 131


State 115

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 132


State 116

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 133


State 117

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 134


State 118

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 119

   34 compound_stmt: '{' $@4 local_defs $@5 stmt_list '}' .

    $default  reduce using rule 34 (compound_stmt)


State 120

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 121

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 122

   38 stmt: expr . ';'

    ';'  shift, and go to state 135


State 123

   29 def: type_specifier pointers ID '[' . unary ']' ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 136


State 124

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 125

   53 expr: unary '=' $@6 expr .

    $default  reduce using rule 53 (expr)


State 126

   88 args: args ',' . expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 137
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 127

   83 unary: unary '(' codegen args ')' .

    $default  reduce using rule 83 (unary)


State 128

   25 param_decl: type_specifier pointers ID '[' unary . ']'
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    ']'       shift, and go to state 138
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70


State 129

   40 stmt: RETURN return_code_gen . ';'
   41     | RETURN return_code_gen . expr ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 139

    expr      go to state 140
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 130

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 141
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 131

   45 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 142
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 132

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 143
    expr      go to state 144
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 133

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 134

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 135

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 136

   29 def: type_specifier pointers ID '[' unary . ']' ';'
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' codegen args ')'
   84      | unary . '(' codegen ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    ']'       shift, and go to state 145
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70


State 137

   88 args: args ',' expr .

    $default  reduce using rule 88 (args)


State 138

   25 param_decl: type_specifier pointers ID '[' unary ']' .

    $default  reduce using rule 25 (param_decl)


State 139

   40 stmt: RETURN return_code_gen ';' .

    $default  reduce using rule 40 (stmt)


State 140

   41 stmt: RETURN return_code_gen expr . ';'

    ';'  shift, and go to state 146


State 141

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 147


State 142

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 148


State 143

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 149


State 144

   50 expr_e: expr .

    $default  reduce using rule 50 (expr_e)


State 145

   29 def: type_specifier pointers ID '[' unary ']' . ';'

    ';'  shift, and go to state 150


State 146

   41 stmt: RETURN return_code_gen expr ';' .

    $default  reduce using rule 41 (stmt)


State 147

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 118
    '{'            shift, and go to state 19

    compound_stmt  go to state 120
    stmt           go to state 151
    expr           go to state 122
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 148

   45 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 118
    '{'            shift, and go to state 19

    compound_stmt  go to state 120
    stmt           go to state 152
    expr           go to state 122
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 149

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 153
    expr      go to state 144
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 150

   29 def: type_specifier pointers ID '[' unary ']' ';' .

    $default  reduce using rule 29 (def)


State 151

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 154

    $default  reduce using rule 43 (stmt)


State 152

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 153

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 155


State 154

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 118
    '{'            shift, and go to state 19

    compound_stmt  go to state 120
    stmt           go to state 156
    expr           go to state 122
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 155

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 157
    expr      go to state 144
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 156

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 157

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 158


State 158

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 112
    IF             shift, and go to state 113
    WHILE          shift, and go to state 114
    FOR            shift, and go to state 115
    BREAK          shift, and go to state 116
    CONTINUE       shift, and go to state 117
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 118
    '{'            shift, and go to state 19

    compound_stmt  go to state 120
    stmt           go to state 159
    expr           go to state 122
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 159

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
