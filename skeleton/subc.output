State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 @2: %empty

   14 @3: %empty

   15 struct_specifier: STRUCT ID '{' @2 def_list @3 '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'

   19 @4: %empty

   20 func_decl: type_specifier pointers ID '(' @4 param_list ')'

   21 pointers: '*'
   22         | %empty

   23 param_list: param_decl
   24           | param_list ',' param_decl

   25 param_decl: type_specifier pointers ID
   26           | type_specifier pointers ID '[' const_expr ']'

   27 def_list: def_list def
   28         | %empty

   29 def: type_specifier pointers ID ';'
   30    | type_specifier pointers ID '[' const_expr ']' ';'
   31    | type_specifier ';'
   32    | func_decl ';'

   33 $@5: %empty

   34 compound_stmt: '{' $@5 local_defs stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN ';'
   41     | RETURN expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'

   49 expr_e: expr
   50       | %empty

   51 const_expr: expr

   52 expr: unary '=' expr
   53     | or_expr
   54     | NULL_TOKEN

   55 or_expr: or_list

   56 or_list: or_list LOGICAL_OR and_expr
   57        | and_expr

   58 and_expr: and_list

   59 and_list: and_list LOGICAL_AND binary
   60         | binary

   61 binary: binary RELOP binary
   62       | binary EQUOP binary
   63       | binary '+' binary
   64       | binary '-' binary
   65       | unary

   66 unary: '(' expr ')'
   67      | '(' unary ')'
   68      | INTEGER_CONST
   69      | CHAR_CONST
   70      | STRING
   71      | ID
   72      | '-' unary
   73      | '!' unary
   74      | unary INCOP
   75      | unary DECOP
   76      | INCOP unary
   77      | DECOP unary
   78      | '&' unary
   79      | '*' unary
   80      | unary '[' expr ']'
   81      | unary '.' ID
   82      | unary STRUCTOP ID
   83      | unary '(' args ')'
   84      | unary '(' ')'

   85 args: expr
   86     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73
'&' (38) 78
'(' (40) 17 18 20 43 44 45 46 66 67 83 84
')' (41) 17 18 20 43 44 45 46 66 67 83 84
'*' (42) 21 79
'+' (43) 63
',' (44) 24 86
'-' (45) 64 72
'.' (46) 81
';' (59) 4 5 6 7 29 30 31 32 38 40 41 42 46 47 48
'=' (61) 52
'[' (91) 5 26 30 80
']' (93) 5 26 30 80
'{' (123) 15 34
'}' (125) 15 34
error (256)
LOGICAL_OR (258) 56
LOGICAL_AND (259) 59
EQUOP (260) 62
RELOP (261) 61
INCOP (262) 74 76
DECOP (263) 75 77
STRUCTOP (264) 82
ELSE (265) 44
STRUCT (266) 15 16
RETURN (267) 40 41
IF (268) 43 44
WHILE (269) 45
FOR (270) 46
BREAK (271) 47
CONTINUE (272) 48
CHAR_CONST (273) 69
STRING (274) 70
INTEGER_CONST (275) 68
ID (276) 4 5 15 16 17 18 20 25 26 29 30 71 81 82
TYPE (277) 10
VOID (278) 11 18
NULL_TOKEN (279) 54


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 9, on right: 2
$@1 (44)
    on left: 8, on right: 9
type_specifier (45)
    on left: 10 11 12, on right: 4 5 7 17 18 20 25 26 29 30 31
struct_specifier (46)
    on left: 15 16, on right: 12
@2 (47)
    on left: 13, on right: 15
@3 (48)
    on left: 14, on right: 15
func_decl (49)
    on left: 17 18 20, on right: 6 9 32
@4 (50)
    on left: 19, on right: 20
pointers (51)
    on left: 21 22, on right: 4 5 17 18 20 25 26 29 30
param_list (52)
    on left: 23 24, on right: 20 24
param_decl (53)
    on left: 25 26, on right: 23 24
def_list (54)
    on left: 27 28, on right: 15 27 35
def (55)
    on left: 29 30 31 32, on right: 27
compound_stmt (56)
    on left: 34, on right: 9 39
$@5 (57)
    on left: 33, on right: 34
local_defs (58)
    on left: 35, on right: 34
stmt_list (59)
    on left: 36 37, on right: 34 36
stmt (60)
    on left: 38 39 40 41 42 43 44 45 46 47 48, on right: 36 43 44 45
    46
expr_e (61)
    on left: 49 50, on right: 46
const_expr (62)
    on left: 51, on right: 5 26 30
expr (63)
    on left: 52 53 54, on right: 38 41 43 44 45 49 51 52 66 80 85 86
or_expr (64)
    on left: 55, on right: 53
or_list (65)
    on left: 56 57, on right: 55 56
and_expr (66)
    on left: 58, on right: 56 57
and_list (67)
    on left: 59 60, on right: 58 59
binary (68)
    on left: 61 62 63 64 65, on right: 59 60 61 62 63 64
unary (69)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84, on right: 52 65 67 72 73 74 75 76 77 78 79 80 81 82 83 84
args (70)
    on left: 85 86, on right: 83 86


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   15 struct_specifier: STRUCT . ID '{' @2 def_list @3 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 5

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 6

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   20          | type_specifier . pointers ID '(' @4 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 22 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' @2 def_list @3 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   21 pointers: '*' .

    $default  reduce using rule 21 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   20          | type_specifier pointers . ID '(' @4 param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   15 struct_specifier: STRUCT ID '{' . @2 def_list @3 '}'

    $default  reduce using rule 13 (@2)

    @2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   20          | type_specifier pointers ID . '(' @4 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   34 compound_stmt: '{' . $@5 local_defs stmt_list '}'

    $default  reduce using rule 33 ($@5)

    $@5  go to state 25


State 20

    9 ext_def: func_decl $@1 compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   15 struct_specifier: STRUCT ID '{' @2 . def_list @3 '}'

    $default  reduce using rule 28 (def_list)

    def_list  go to state 26


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    const_expr  go to state 39
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 23

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   20          | type_specifier pointers ID '(' . @4 param_list ')'

    ')'   shift, and go to state 47
    VOID  shift, and go to state 48

    VOID      [reduce using rule 19 (@4)]
    $default  reduce using rule 19 (@4)

    @4  go to state 49


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   34 compound_stmt: '{' $@5 . local_defs stmt_list '}'

    $default  reduce using rule 28 (def_list)

    def_list    go to state 50
    local_defs  go to state 51


State 26

   15 struct_specifier: STRUCT ID '{' @2 def_list . @3 '}'
   27 def_list: def_list . def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 14 (@3)

    type_specifier    go to state 52
    struct_specifier  go to state 9
    @3                go to state 53
    func_decl         go to state 54
    def               go to state 55


State 27

   78 unary: '&' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    unary  go to state 56


State 28

   72 unary: '-' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    unary  go to state 57


State 29

   79 unary: '*' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    unary  go to state 58


State 30

   73 unary: '!' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    unary  go to state 59


State 31

   76 unary: INCOP . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    unary  go to state 60


State 32

   77 unary: DECOP . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    unary  go to state 61


State 33

   66 unary: '(' . expr ')'
   67      | '(' . unary ')'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 62
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 63


State 34

   69 unary: CHAR_CONST .

    $default  reduce using rule 69 (unary)


State 35

   70 unary: STRING .

    $default  reduce using rule 70 (unary)


State 36

   68 unary: INTEGER_CONST .

    $default  reduce using rule 68 (unary)


State 37

   71 unary: ID .

    $default  reduce using rule 71 (unary)


State 38

   54 expr: NULL_TOKEN .

    $default  reduce using rule 54 (expr)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 64


State 40

   51 const_expr: expr .

    $default  reduce using rule 51 (const_expr)


State 41

   53 expr: or_expr .

    $default  reduce using rule 53 (expr)


State 42

   55 or_expr: or_list .
   56 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 65

    $default  reduce using rule 55 (or_expr)


State 43

   57 or_list: and_expr .

    $default  reduce using rule 57 (or_list)


State 44

   58 and_expr: and_list .
   59 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 66

    $default  reduce using rule 58 (and_expr)


State 45

   60 and_list: binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 67
    RELOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70

    $default  reduce using rule 60 (and_list)


State 46

   52 expr: unary . '=' expr
   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    '='       shift, and go to state 71
    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 65 (binary)


State 47

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 48

   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 78


State 49

   20 func_decl: type_specifier pointers ID '(' @4 . param_list ')'

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    type_specifier    go to state 79
    struct_specifier  go to state 9
    param_list        go to state 80
    param_decl        go to state 81


State 50

   27 def_list: def_list . def
   35 local_defs: def_list .

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 54
    def               go to state 55


State 51

   34 compound_stmt: '{' $@5 local_defs . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 82


State 52

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   20          | type_specifier . pointers ID '(' @4 param_list ')'
   29 def: type_specifier . pointers ID ';'
   30    | type_specifier . pointers ID '[' const_expr ']' ';'
   31    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 83

    $default  reduce using rule 22 (pointers)

    pointers  go to state 84


State 53

   15 struct_specifier: STRUCT ID '{' @2 def_list @3 . '}'

    '}'  shift, and go to state 85


State 54

   32 def: func_decl . ';'

    ';'  shift, and go to state 86


State 55

   27 def_list: def_list def .

    $default  reduce using rule 27 (def_list)


State 56

   74 unary: unary . INCOP
   75      | unary . DECOP
   78      | '&' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 78 (unary)


State 57

   72 unary: '-' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 72 (unary)


State 58

   74 unary: unary . INCOP
   75      | unary . DECOP
   79      | '*' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 79 (unary)


State 59

   73 unary: '!' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 73 (unary)


State 60

   74 unary: unary . INCOP
   75      | unary . DECOP
   76      | INCOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 76 (unary)


State 61

   74 unary: unary . INCOP
   75      | unary . DECOP
   77      | DECOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 77 (unary)


State 62

   66 unary: '(' expr . ')'

    ')'  shift, and go to state 87


State 63

   52 expr: unary . '=' expr
   65 binary: unary .
   67 unary: '(' unary . ')'
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    '='       shift, and go to state 71
    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    ')'       shift, and go to state 88
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 65 (binary)


State 64

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 89


State 65

   56 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    and_expr  go to state 90
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 91


State 66

   59 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    binary  go to state 92
    unary   go to state 91


State 67

   62 binary: binary EQUOP . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    binary  go to state 93
    unary   go to state 91


State 68

   61 binary: binary RELOP . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    binary  go to state 94
    unary   go to state 91


State 69

   63 binary: binary '+' . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    binary  go to state 95
    unary   go to state 91


State 70

   64 binary: binary '-' . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37

    binary  go to state 96
    unary   go to state 91


State 71

   52 expr: unary '=' . expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 97
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 72

   74 unary: unary INCOP .

    $default  reduce using rule 74 (unary)


State 73

   75 unary: unary DECOP .

    $default  reduce using rule 75 (unary)


State 74

   80 unary: unary '[' . expr ']'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 98
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 75

   83 unary: unary '(' . args ')'
   84      | unary '(' . ')'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    ')'            shift, and go to state 99
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 100
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 101


State 76

   81 unary: unary '.' . ID

    ID  shift, and go to state 102


State 77

   82 unary: unary STRUCTOP . ID

    ID  shift, and go to state 103


State 78

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 79

   25 param_decl: type_specifier . pointers ID
   26           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 22 (pointers)

    pointers  go to state 104


State 80

   20 func_decl: type_specifier pointers ID '(' @4 param_list . ')'
   24 param_list: param_list . ',' param_decl

    ','  shift, and go to state 105
    ')'  shift, and go to state 106


State 81

   23 param_list: param_decl .

    $default  reduce using rule 23 (param_list)


State 82

   34 compound_stmt: '{' $@5 local_defs stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 113
    '{'            shift, and go to state 19
    '}'            shift, and go to state 114

    compound_stmt  go to state 115
    stmt           go to state 116
    expr           go to state 117
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 83

   31 def: type_specifier ';' .

    $default  reduce using rule 31 (def)


State 84

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   20          | type_specifier pointers . ID '(' @4 param_list ')'
   29 def: type_specifier pointers . ID ';'
   30    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 118


State 85

   15 struct_specifier: STRUCT ID '{' @2 def_list @3 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 86

   32 def: func_decl ';' .

    $default  reduce using rule 32 (def)


State 87

   66 unary: '(' expr ')' .

    $default  reduce using rule 66 (unary)


State 88

   67 unary: '(' unary ')' .

    $default  reduce using rule 67 (unary)


State 89

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 90

   56 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 56 (or_list)


State 91

   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 72
    DECOP     shift, and go to state 73
    '['       shift, and go to state 74
    '('       shift, and go to state 75
    '.'       shift, and go to state 76
    STRUCTOP  shift, and go to state 77

    $default  reduce using rule 65 (binary)


State 92

   59 and_list: and_list LOGICAL_AND binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 67
    RELOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70

    $default  reduce using rule 59 (and_list)


State 93

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   62       | binary EQUOP binary .
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 68
    '+'    shift, and go to state 69
    '-'    shift, and go to state 70

    $default  reduce using rule 62 (binary)


State 94

   61 binary: binary . RELOP binary
   61       | binary RELOP binary .
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70

    $default  reduce using rule 61 (binary)


State 95

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   63       | binary '+' binary .
   64       | binary . '-' binary

    $default  reduce using rule 63 (binary)


State 96

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary
   64       | binary '-' binary .

    $default  reduce using rule 64 (binary)


State 97

   52 expr: unary '=' expr .

    $default  reduce using rule 52 (expr)


State 98

   80 unary: unary '[' expr . ']'

    ']'  shift, and go to state 119


State 99

   84 unary: unary '(' ')' .

    $default  reduce using rule 84 (unary)


State 100

   85 args: expr .

    $default  reduce using rule 85 (args)


State 101

   83 unary: unary '(' args . ')'
   86 args: args . ',' expr

    ','  shift, and go to state 120
    ')'  shift, and go to state 121


State 102

   81 unary: unary '.' ID .

    $default  reduce using rule 81 (unary)


State 103

   82 unary: unary STRUCTOP ID .

    $default  reduce using rule 82 (unary)


State 104

   25 param_decl: type_specifier pointers . ID
   26           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 122


State 105

   24 param_list: param_list ',' . param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    type_specifier    go to state 79
    struct_specifier  go to state 9
    param_decl        go to state 123


State 106

   20 func_decl: type_specifier pointers ID '(' @4 param_list ')' .

    $default  reduce using rule 20 (func_decl)


State 107

   40 stmt: RETURN . ';'
   41     | RETURN . expr ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 124

    expr      go to state 125
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 108

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 126


State 109

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 127


State 110

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 128


State 111

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 129


State 112

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 130


State 113

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 114

   34 compound_stmt: '{' $@5 local_defs stmt_list '}' .

    $default  reduce using rule 34 (compound_stmt)


State 115

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 116

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 117

   38 stmt: expr . ';'

    ';'  shift, and go to state 131


State 118

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   20          | type_specifier pointers ID . '(' @4 param_list ')'
   29 def: type_specifier pointers ID . ';'
   30    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 132
    '('  shift, and go to state 23
    ';'  shift, and go to state 133


State 119

   80 unary: unary '[' expr ']' .

    $default  reduce using rule 80 (unary)


State 120

   86 args: args ',' . expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 134
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 121

   83 unary: unary '(' args ')' .

    $default  reduce using rule 83 (unary)


State 122

   25 param_decl: type_specifier pointers ID .
   26           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 135

    $default  reduce using rule 25 (param_decl)


State 123

   24 param_list: param_list ',' param_decl .

    $default  reduce using rule 24 (param_list)


State 124

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 125

   41 stmt: RETURN expr . ';'

    ';'  shift, and go to state 136


State 126

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 137
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 127

   45 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 138
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 128

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 139
    expr      go to state 140
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 129

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 130

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 131

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 132

   30 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    const_expr  go to state 141
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 133

   29 def: type_specifier pointers ID ';' .

    $default  reduce using rule 29 (def)


State 134

   86 args: args ',' expr .

    $default  reduce using rule 86 (args)


State 135

   26 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    const_expr  go to state 142
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 136

   41 stmt: RETURN expr ';' .

    $default  reduce using rule 41 (stmt)


State 137

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 143


State 138

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 144


State 139

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 145


State 140

   49 expr_e: expr .

    $default  reduce using rule 49 (expr_e)


State 141

   30 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 146


State 142

   26 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 147


State 143

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 113
    '{'            shift, and go to state 19

    compound_stmt  go to state 115
    stmt           go to state 148
    expr           go to state 117
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 144

   45 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 113
    '{'            shift, and go to state 19

    compound_stmt  go to state 115
    stmt           go to state 149
    expr           go to state 117
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 145

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 150
    expr      go to state 140
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 146

   30 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 151


State 147

   26 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 26 (param_decl)


State 148

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 152

    $default  reduce using rule 43 (stmt)


State 149

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 150

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 153


State 151

   30 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 30 (def)


State 152

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 113
    '{'            shift, and go to state 19

    compound_stmt  go to state 115
    stmt           go to state 154
    expr           go to state 117
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 153

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 155
    expr      go to state 140
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 154

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 155

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 156


State 156

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 113
    '{'            shift, and go to state 19

    compound_stmt  go to state 115
    stmt           go to state 157
    expr           go to state 117
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 157

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
