Nonterminals useless in grammar

   const_expr


Rules useless in grammar

   86 const_expr: expr


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' unary ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@2: %empty

   14 @3: %empty

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'
   19          | type_specifier pointers ID '(' param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' unary ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' unary ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 $@4: %empty

   33 $@5: %empty

   34 compound_stmt: '{' $@4 local_defs $@5 stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN ';'
   41     | RETURN expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'

   49 expr_e: expr
   50       | %empty

   51 expr: unary '=' expr
   52     | or_expr

   53 or_expr: or_list

   54 or_list: or_list LOGICAL_OR and_expr
   55        | and_expr

   56 and_expr: and_list

   57 and_list: and_list LOGICAL_AND binary
   58         | binary

   59 binary: binary RELOP binary
   60       | binary EQUOP binary
   61       | binary '+' binary
   62       | binary '-' binary
   63       | unary

   64 unary: '(' expr ')'
   65      | '(' unary ')'
   66      | INTEGER_CONST
   67      | CHAR_CONST
   68      | STRING
   69      | ID
   70      | '-' unary
   71      | '!' unary
   72      | unary INCOP
   73      | unary DECOP
   74      | INCOP unary
   75      | DECOP unary
   76      | '&' unary
   77      | '*' unary
   78      | unary '[' expr ']'
   79      | unary '.' ID
   80      | unary STRUCTOP ID
   81      | unary '(' args ')'
   82      | unary '(' ')'
   83      | NULL_TOKEN

   84 args: expr
   85     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 71
'&' (38) 76
'(' (40) 17 18 19 43 44 45 46 64 65 81 82
')' (41) 17 18 19 43 44 45 46 64 65 81 82
'*' (42) 20 77
'+' (43) 61
',' (44) 23 85
'-' (45) 62 70
'.' (46) 79
';' (59) 4 5 6 7 28 29 30 31 38 40 41 42 46 47 48
'=' (61) 51
'[' (91) 5 25 29 78
']' (93) 5 25 29 78
'{' (123) 15 34
'}' (125) 15 34
error (256)
LOGICAL_OR (258) 54
LOGICAL_AND (259) 57
EQUOP (260) 60
RELOP (261) 59
INCOP (262) 72 74
DECOP (263) 73 75
STRUCTOP (264) 80
ELSE (265) 44
STRUCT (266) 15 16
RETURN (267) 40 41
IF (268) 43 44
WHILE (269) 45
FOR (270) 46
BREAK (271) 47
CONTINUE (272) 48
CHAR_CONST (273) 67
STRING (274) 68
INTEGER_CONST (275) 66
ID (276) 4 5 15 16 17 18 19 24 25 28 29 69 79 80
TYPE (277) 10
VOID (278) 11 18
NULL_TOKEN (279) 83


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 9, on right: 2
$@1 (44)
    on left: 8, on right: 9
type_specifier (45)
    on left: 10 11 12, on right: 4 5 7 17 18 19 24 25 28 29 30
struct_specifier (46)
    on left: 15 16, on right: 12
$@2 (47)
    on left: 13, on right: 15
@3 (48)
    on left: 14, on right: 15
func_decl (49)
    on left: 17 18 19, on right: 6 9 31
pointers (50)
    on left: 20 21, on right: 4 5 17 18 19 24 25 28 29
param_list (51)
    on left: 22 23, on right: 19 23
param_decl (52)
    on left: 24 25, on right: 22 23
def_list (53)
    on left: 26 27, on right: 15 26 35
def (54)
    on left: 28 29 30 31, on right: 26
compound_stmt (55)
    on left: 34, on right: 9 39
$@4 (56)
    on left: 32, on right: 34
$@5 (57)
    on left: 33, on right: 34
local_defs (58)
    on left: 35, on right: 34
stmt_list (59)
    on left: 36 37, on right: 34 36
stmt (60)
    on left: 38 39 40 41 42 43 44 45 46 47 48, on right: 36 43 44 45
    46
expr_e (61)
    on left: 49 50, on right: 46
expr (62)
    on left: 51 52, on right: 38 41 43 44 45 49 51 64 78 84 85
or_expr (63)
    on left: 53, on right: 52
or_list (64)
    on left: 54 55, on right: 53 54
and_expr (65)
    on left: 56, on right: 54 55
and_list (66)
    on left: 57 58, on right: 56 57
binary (67)
    on left: 59 60 61 62 63, on right: 57 58 59 60 61 62
unary (68)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83, on right: 5 25 29 51 63 65 70 71 72 73 74 75 76 77 78 79
    80 81 82
args (69)
    on left: 84 85, on right: 81 85


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   15 struct_specifier: STRUCT . ID '{' $@2 def_list @3 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 5

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 6

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' unary ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' $@2 def_list @3 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' unary ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   15 struct_specifier: STRUCT ID '{' . $@2 def_list @3 '}'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' unary ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   34 compound_stmt: '{' . $@4 local_defs $@5 stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 25


State 20

    9 ext_def: func_decl $@1 compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   15 struct_specifier: STRUCT ID '{' $@2 . def_list @3 '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 22

    5 ext_def: type_specifier pointers ID '[' . unary ']' ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 39


State 23

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 40
    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 41

    type_specifier    go to state 42
    struct_specifier  go to state 9
    param_list        go to state 43
    param_decl        go to state 44


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   34 compound_stmt: '{' $@4 . local_defs $@5 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 45
    local_defs  go to state 46


State 26

   15 struct_specifier: STRUCT ID '{' $@2 def_list . @3 '}'
   26 def_list: def_list . def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 14 (@3)

    type_specifier    go to state 47
    struct_specifier  go to state 9
    @3                go to state 48
    func_decl         go to state 49
    def               go to state 50


State 27

   76 unary: '&' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 51


State 28

   70 unary: '-' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 52


State 29

   77 unary: '*' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 53


State 30

   71 unary: '!' . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 54


State 31

   74 unary: INCOP . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 55


State 32

   75 unary: DECOP . unary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 56


State 33

   64 unary: '(' . expr ')'
   65      | '(' . unary ')'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 57
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 63


State 34

   67 unary: CHAR_CONST .

    $default  reduce using rule 67 (unary)


State 35

   68 unary: STRING .

    $default  reduce using rule 68 (unary)


State 36

   66 unary: INTEGER_CONST .

    $default  reduce using rule 66 (unary)


State 37

   69 unary: ID .

    $default  reduce using rule 69 (unary)


State 38

   83 unary: NULL_TOKEN .

    $default  reduce using rule 83 (unary)


State 39

    5 ext_def: type_specifier pointers ID '[' unary . ']' ';'
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    ']'       shift, and go to state 67
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70


State 40

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 41

   11 type_specifier: VOID .
   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 71

    $default  reduce using rule 11 (type_specifier)


State 42

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' unary ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 72


State 43

   19 func_decl: type_specifier pointers ID '(' param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 73
    ')'  shift, and go to state 74


State 44

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 45

   26 def_list: def_list . def
   35 local_defs: def_list .

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 47
    struct_specifier  go to state 9
    func_decl         go to state 49
    def               go to state 50


State 46

   34 compound_stmt: '{' $@4 local_defs . $@5 stmt_list '}'

    $default  reduce using rule 33 ($@5)

    $@5  go to state 75


State 47

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' unary ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 76

    $default  reduce using rule 21 (pointers)

    pointers  go to state 77


State 48

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 . '}'

    '}'  shift, and go to state 78


State 49

   31 def: func_decl . ';'

    ';'  shift, and go to state 79


State 50

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 51

   72 unary: unary . INCOP
   73      | unary . DECOP
   76      | '&' unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 76 (unary)


State 52

   70 unary: '-' unary .
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 70 (unary)


State 53

   72 unary: unary . INCOP
   73      | unary . DECOP
   77      | '*' unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 77 (unary)


State 54

   71 unary: '!' unary .
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 71 (unary)


State 55

   72 unary: unary . INCOP
   73      | unary . DECOP
   74      | INCOP unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 74 (unary)


State 56

   72 unary: unary . INCOP
   73      | unary . DECOP
   75      | DECOP unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 75 (unary)


State 57

   64 unary: '(' expr . ')'

    ')'  shift, and go to state 80


State 58

   52 expr: or_expr .

    $default  reduce using rule 52 (expr)


State 59

   53 or_expr: or_list .
   54 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 81

    $default  reduce using rule 53 (or_expr)


State 60

   55 or_list: and_expr .

    $default  reduce using rule 55 (or_list)


State 61

   56 and_expr: and_list .
   57 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 82

    $default  reduce using rule 56 (and_expr)


State 62

   58 and_list: binary .
   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary

    EQUOP  shift, and go to state 83
    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 58 (and_list)


State 63

   51 expr: unary . '=' expr
   63 binary: unary .
   65 unary: '(' unary . ')'
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    '='       shift, and go to state 87
    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    ')'       shift, and go to state 88
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 63 (binary)


State 64

   72 unary: unary INCOP .

    $default  reduce using rule 72 (unary)


State 65

   73 unary: unary DECOP .

    $default  reduce using rule 73 (unary)


State 66

   78 unary: unary '[' . expr ']'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 89
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 67

    5 ext_def: type_specifier pointers ID '[' unary ']' . ';'

    ';'  shift, and go to state 91


State 68

   81 unary: unary '(' . args ')'
   82      | unary '(' . ')'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    ')'            shift, and go to state 92
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 93
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90
    args      go to state 94


State 69

   79 unary: unary '.' . ID

    ID  shift, and go to state 95


State 70

   80 unary: unary STRUCTOP . ID

    ID  shift, and go to state 96


State 71

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 72

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' unary ']'

    ID  shift, and go to state 97


State 73

   23 param_list: param_list ',' . param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    type_specifier    go to state 42
    struct_specifier  go to state 9
    param_decl        go to state 98


State 74

   19 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 75

   34 compound_stmt: '{' $@4 local_defs $@5 . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 99


State 76

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 77

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' unary ']' ';'

    ID  shift, and go to state 100


State 78

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 79

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 80

   64 unary: '(' expr ')' .

    $default  reduce using rule 64 (unary)


State 81

   54 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    and_expr  go to state 101
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 102


State 82

   57 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 103
    unary   go to state 102


State 83

   60 binary: binary EQUOP . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 104
    unary   go to state 102


State 84

   59 binary: binary RELOP . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 105
    unary   go to state 102


State 85

   61 binary: binary '+' . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 106
    unary   go to state 102


State 86

   62 binary: binary '-' . binary

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    binary  go to state 107
    unary   go to state 102


State 87

   51 expr: unary '=' . expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 108
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 88

   65 unary: '(' unary ')' .

    $default  reduce using rule 65 (unary)


State 89

   78 unary: unary '[' expr . ']'

    ']'  shift, and go to state 109


State 90

   51 expr: unary . '=' expr
   63 binary: unary .
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    '='       shift, and go to state 87
    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 63 (binary)


State 91

    5 ext_def: type_specifier pointers ID '[' unary ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 92

   82 unary: unary '(' ')' .

    $default  reduce using rule 82 (unary)


State 93

   84 args: expr .

    $default  reduce using rule 84 (args)


State 94

   81 unary: unary '(' args . ')'
   85 args: args . ',' expr

    ','  shift, and go to state 110
    ')'  shift, and go to state 111


State 95

   79 unary: unary '.' ID .

    $default  reduce using rule 79 (unary)


State 96

   80 unary: unary STRUCTOP ID .

    $default  reduce using rule 80 (unary)


State 97

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' unary ']'

    '['  shift, and go to state 112

    $default  reduce using rule 24 (param_decl)


State 98

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 99

   34 compound_stmt: '{' $@4 local_defs $@5 stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 113
    IF             shift, and go to state 114
    WHILE          shift, and go to state 115
    FOR            shift, and go to state 116
    BREAK          shift, and go to state 117
    CONTINUE       shift, and go to state 118
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 119
    '{'            shift, and go to state 19
    '}'            shift, and go to state 120

    compound_stmt  go to state 121
    stmt           go to state 122
    expr           go to state 123
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 100

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' unary ']' ';'

    '['  shift, and go to state 124
    '('  shift, and go to state 23
    ';'  shift, and go to state 125


State 101

   54 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 54 (or_list)


State 102

   63 binary: unary .
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70

    $default  reduce using rule 63 (binary)


State 103

   57 and_list: and_list LOGICAL_AND binary .
   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary

    EQUOP  shift, and go to state 83
    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 57 (and_list)


State 104

   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   60       | binary EQUOP binary .
   61       | binary . '+' binary
   62       | binary . '-' binary

    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 60 (binary)


State 105

   59 binary: binary . RELOP binary
   59       | binary RELOP binary .
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86

    $default  reduce using rule 59 (binary)


State 106

   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   61       | binary '+' binary .
   62       | binary . '-' binary

    $default  reduce using rule 61 (binary)


State 107

   59 binary: binary . RELOP binary
   60       | binary . EQUOP binary
   61       | binary . '+' binary
   62       | binary . '-' binary
   62       | binary '-' binary .

    $default  reduce using rule 62 (binary)


State 108

   51 expr: unary '=' expr .

    $default  reduce using rule 51 (expr)


State 109

   78 unary: unary '[' expr ']' .

    $default  reduce using rule 78 (unary)


State 110

   85 args: args ',' . expr

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 126
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 111

   81 unary: unary '(' args ')' .

    $default  reduce using rule 81 (unary)


State 112

   25 param_decl: type_specifier pointers ID '[' . unary ']'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 127


State 113

   40 stmt: RETURN . ';'
   41     | RETURN . expr ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 128

    expr      go to state 129
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 114

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 130


State 115

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 131


State 116

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 132


State 117

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 133


State 118

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 134


State 119

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 120

   34 compound_stmt: '{' $@4 local_defs $@5 stmt_list '}' .

    $default  reduce using rule 34 (compound_stmt)


State 121

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 122

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 123

   38 stmt: expr . ';'

    ';'  shift, and go to state 135


State 124

   29 def: type_specifier pointers ID '[' . unary ']' ';'

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    unary  go to state 136


State 125

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 126

   85 args: args ',' expr .

    $default  reduce using rule 85 (args)


State 127

   25 param_decl: type_specifier pointers ID '[' unary . ']'
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    ']'       shift, and go to state 137
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70


State 128

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 129

   41 stmt: RETURN expr . ';'

    ';'  shift, and go to state 138


State 130

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 139
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 131

   45 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    expr      go to state 140
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 132

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 141
    expr      go to state 142
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 133

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 134

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 135

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 136

   29 def: type_specifier pointers ID '[' unary . ']' ';'
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 64
    DECOP     shift, and go to state 65
    '['       shift, and go to state 66
    ']'       shift, and go to state 143
    '('       shift, and go to state 68
    '.'       shift, and go to state 69
    STRUCTOP  shift, and go to state 70


State 137

   25 param_decl: type_specifier pointers ID '[' unary ']' .

    $default  reduce using rule 25 (param_decl)


State 138

   41 stmt: RETURN expr ';' .

    $default  reduce using rule 41 (stmt)


State 139

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 144


State 140

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 145


State 141

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 146


State 142

   49 expr_e: expr .

    $default  reduce using rule 49 (expr_e)


State 143

   29 def: type_specifier pointers ID '[' unary ']' . ';'

    ';'  shift, and go to state 147


State 144

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 113
    IF             shift, and go to state 114
    WHILE          shift, and go to state 115
    FOR            shift, and go to state 116
    BREAK          shift, and go to state 117
    CONTINUE       shift, and go to state 118
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 119
    '{'            shift, and go to state 19

    compound_stmt  go to state 121
    stmt           go to state 148
    expr           go to state 123
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 145

   45 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 113
    IF             shift, and go to state 114
    WHILE          shift, and go to state 115
    FOR            shift, and go to state 116
    BREAK          shift, and go to state 117
    CONTINUE       shift, and go to state 118
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 119
    '{'            shift, and go to state 19

    compound_stmt  go to state 121
    stmt           go to state 149
    expr           go to state 123
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 146

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 150
    expr      go to state 142
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 147

   29 def: type_specifier pointers ID '[' unary ']' ';' .

    $default  reduce using rule 29 (def)


State 148

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 151

    $default  reduce using rule 43 (stmt)


State 149

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 150

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 152


State 151

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 113
    IF             shift, and go to state 114
    WHILE          shift, and go to state 115
    FOR            shift, and go to state 116
    BREAK          shift, and go to state 117
    CONTINUE       shift, and go to state 118
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 119
    '{'            shift, and go to state 19

    compound_stmt  go to state 121
    stmt           go to state 153
    expr           go to state 123
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 152

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 154
    expr      go to state 142
    or_expr   go to state 58
    or_list   go to state 59
    and_expr  go to state 60
    and_list  go to state 61
    binary    go to state 62
    unary     go to state 90


State 153

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 154

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 155


State 155

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 27
    '-'            shift, and go to state 28
    '*'            shift, and go to state 29
    '!'            shift, and go to state 30
    INCOP          shift, and go to state 31
    DECOP          shift, and go to state 32
    '('            shift, and go to state 33
    RETURN         shift, and go to state 113
    IF             shift, and go to state 114
    WHILE          shift, and go to state 115
    FOR            shift, and go to state 116
    BREAK          shift, and go to state 117
    CONTINUE       shift, and go to state 118
    CHAR_CONST     shift, and go to state 34
    STRING         shift, and go to state 35
    INTEGER_CONST  shift, and go to state 36
    ID             shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ';'            shift, and go to state 119
    '{'            shift, and go to state 19

    compound_stmt  go to state 121
    stmt           go to state 156
    expr           go to state 123
    or_expr        go to state 58
    or_list        go to state 59
    and_expr       go to state 60
    and_list       go to state 61
    binary         go to state 62
    unary          go to state 90


State 156

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
