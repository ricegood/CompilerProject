Nonterminals useless in grammar

   const_expr


Rules useless in grammar

   99 const_expr: expr


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'

    5 $@1: %empty

    6 $@2: %empty

    7 ext_def: type_specifier pointers ID '[' $@1 unary $@2 ']' ';'
    8        | func_decl ';'
    9        | type_specifier ';'

   10 $@3: %empty

   11 ext_def: func_decl $@3 compound_stmt

   12 type_specifier: TYPE
   13               | VOID
   14               | struct_specifier

   15 $@4: %empty

   16 @5: %empty

   17 struct_specifier: STRUCT ID '{' $@4 def_list @5 '}'
   18                 | STRUCT ID

   19 func_decl: type_specifier pointers ID '(' ')'
   20          | type_specifier pointers ID '(' VOID ')'
   21          | type_specifier pointers ID '(' param_list ')'

   22 pointers: '*'
   23         | %empty

   24 param_list: param_decl
   25           | param_list ',' param_decl

   26 param_decl: type_specifier pointers ID

   27 $@6: %empty

   28 $@7: %empty

   29 param_decl: type_specifier pointers ID '[' $@6 unary $@7 ']'

   30 def_list: def_list def
   31         | %empty

   32 def: type_specifier pointers ID ';'

   33 $@8: %empty

   34 $@9: %empty

   35 def: type_specifier pointers ID '[' $@8 unary $@9 ']' ';'
   36    | type_specifier ';'
   37    | func_decl ';'

   38 $@10: %empty

   39 $@11: %empty

   40 compound_stmt: '{' $@10 local_defs $@11 stmt_list '}'

   41 local_defs: def_list

   42 stmt_list: stmt_list stmt
   43          | %empty

   44 stmt: expr ';'
   45     | compound_stmt
   46     | RETURN return_code_gen ';'
   47     | RETURN return_code_gen expr ';'
   48     | ';'
   49     | IF '(' expr ')' if_branch_code_gen stmt

   50 @12: %empty

   51 stmt: IF '(' expr ')' if_branch_code_gen stmt ELSE @12 stmt

   52 @13: %empty

   53 @14: %empty

   54 stmt: WHILE @13 '(' expr ')' @14 stmt
   55     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   56     | BREAK ';'
   57     | CONTINUE ';'

   58 return_code_gen: %empty

   59 if_branch_code_gen: %empty

   60 expr_e: expr
   61       | %empty

   62 $@15: %empty

   63 expr: unary '=' $@15 expr
   64     | or_expr

   65 or_expr: or_list

   66 or_list: or_list LOGICAL_OR and_expr
   67        | and_expr

   68 and_expr: and_list

   69 and_list: and_list LOGICAL_AND binary
   70         | binary

   71 binary: binary RELOP binary
   72       | binary EQUOP binary
   73       | binary '+' binary
   74       | binary '-' binary
   75       | unary

   76 unary: '(' expr ')'
   77      | '(' unary ')'
   78      | INTEGER_CONST
   79      | CHAR_CONST
   80      | STRING
   81      | ID
   82      | '-' unary
   83      | '!' unary
   84      | unary INCOP
   85      | unary DECOP
   86      | INCOP unary
   87      | DECOP unary
   88      | '&' unary
   89      | '*' unary
   90      | unary '[' expr ']'
   91      | unary '.' ID
   92      | unary STRUCTOP ID
   93      | unary '(' codegen args ')'
   94      | unary '(' codegen ')'
   95      | NULL_TOKEN

   96 codegen: %empty

   97 args: expr
   98     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 83
'&' (38) 88
'(' (40) 19 20 21 49 51 54 55 76 77 93 94
')' (41) 19 20 21 49 51 54 55 76 77 93 94
'*' (42) 22 89
'+' (43) 73
',' (44) 25 98
'-' (45) 74 82
'.' (46) 91
';' (59) 4 7 8 9 32 35 36 37 44 46 47 48 55 56 57
'=' (61) 63
'[' (91) 7 29 35 90
']' (93) 7 29 35 90
'{' (123) 17 40
'}' (125) 17 40
error (256)
LOGICAL_OR (258) 66
LOGICAL_AND (259) 69
EQUOP (260) 72
RELOP (261) 71
INCOP (262) 84 86
DECOP (263) 85 87
STRUCTOP (264) 92
ELSE (265) 51
STRUCT (266) 17 18
RETURN (267) 46 47
IF (268) 49 51
WHILE (269) 54
FOR (270) 55
BREAK (271) 56
CONTINUE (272) 57
STRING (273) 80
CHAR_CONST (274) 79
INTEGER_CONST (275) 78
ID (276) 4 7 17 18 19 20 21 26 29 32 35 81 91 92
TYPE (277) 12
VOID (278) 13 20
NULL_TOKEN (279) 95


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 7 8 9 11, on right: 2
$@1 (44)
    on left: 5, on right: 7
$@2 (45)
    on left: 6, on right: 7
$@3 (46)
    on left: 10, on right: 11
type_specifier (47)
    on left: 12 13 14, on right: 4 7 9 19 20 21 26 29 32 35 36
struct_specifier (48)
    on left: 17 18, on right: 14
$@4 (49)
    on left: 15, on right: 17
@5 (50)
    on left: 16, on right: 17
func_decl (51)
    on left: 19 20 21, on right: 8 11 37
pointers (52)
    on left: 22 23, on right: 4 7 19 20 21 26 29 32 35
param_list (53)
    on left: 24 25, on right: 21 25
param_decl (54)
    on left: 26 29, on right: 24 25
$@6 (55)
    on left: 27, on right: 29
$@7 (56)
    on left: 28, on right: 29
def_list (57)
    on left: 30 31, on right: 17 30 41
def (58)
    on left: 32 35 36 37, on right: 30
$@8 (59)
    on left: 33, on right: 35
$@9 (60)
    on left: 34, on right: 35
compound_stmt (61)
    on left: 40, on right: 11 45
$@10 (62)
    on left: 38, on right: 40
$@11 (63)
    on left: 39, on right: 40
local_defs (64)
    on left: 41, on right: 40
stmt_list (65)
    on left: 42 43, on right: 40 42
stmt (66)
    on left: 44 45 46 47 48 49 51 54 55 56 57, on right: 42 49 51 54
    55
@12 (67)
    on left: 50, on right: 51
@13 (68)
    on left: 52, on right: 54
@14 (69)
    on left: 53, on right: 54
return_code_gen (70)
    on left: 58, on right: 46 47
if_branch_code_gen (71)
    on left: 59, on right: 49 51
expr_e (72)
    on left: 60 61, on right: 55
expr (73)
    on left: 63 64, on right: 44 47 49 51 54 60 63 76 90 97 98
$@15 (74)
    on left: 62, on right: 63
or_expr (75)
    on left: 65, on right: 64
or_list (76)
    on left: 66 67, on right: 65 66
and_expr (77)
    on left: 68, on right: 66 67
and_list (78)
    on left: 69 70, on right: 68 69
binary (79)
    on left: 71 72 73 74 75, on right: 69 70 71 72 73 74
unary (80)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
    94 95, on right: 7 29 35 63 75 77 82 83 84 85 86 87 88 89 90 91
    92 93 94
codegen (81)
    on left: 96, on right: 93 94
args (82)
    on left: 97 98, on right: 93 98


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   17 struct_specifier: STRUCT . ID '{' $@4 def_list @5 '}'
   18                 | STRUCT . ID

    ID  shift, and go to state 11


State 5

   12 type_specifier: TYPE .

    $default  reduce using rule 12 (type_specifier)


State 6

   13 type_specifier: VOID .

    $default  reduce using rule 13 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    7        | type_specifier . pointers ID '[' $@1 unary $@2 ']' ';'
    9        | type_specifier . ';'
   19 func_decl: type_specifier . pointers ID '(' ')'
   20          | type_specifier . pointers ID '(' VOID ')'
   21          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 23 (pointers)

    pointers  go to state 14


State 9

   14 type_specifier: struct_specifier .

    $default  reduce using rule 14 (type_specifier)


State 10

    8 ext_def: func_decl . ';'
   11        | func_decl . $@3 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 10 ($@3)

    $@3  go to state 16


State 11

   17 struct_specifier: STRUCT ID . '{' $@4 def_list @5 '}'
   18                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 18 (struct_specifier)


State 12

   22 pointers: '*' .

    $default  reduce using rule 22 (pointers)


State 13

    9 ext_def: type_specifier ';' .

    $default  reduce using rule 9 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    7        | type_specifier pointers . ID '[' $@1 unary $@2 ']' ';'
   19 func_decl: type_specifier pointers . ID '(' ')'
   20          | type_specifier pointers . ID '(' VOID ')'
   21          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 18


State 15

    8 ext_def: func_decl ';' .

    $default  reduce using rule 8 (ext_def)


State 16

   11 ext_def: func_decl $@3 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   17 struct_specifier: STRUCT ID '{' . $@4 def_list @5 '}'

    $default  reduce using rule 15 ($@4)

    $@4  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    7        | type_specifier pointers ID . '[' $@1 unary $@2 ']' ';'
   19 func_decl: type_specifier pointers ID . '(' ')'
   20          | type_specifier pointers ID . '(' VOID ')'
   21          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   40 compound_stmt: '{' . $@10 local_defs $@11 stmt_list '}'

    $default  reduce using rule 38 ($@10)

    $@10  go to state 25


State 20

   11 ext_def: func_decl $@3 compound_stmt .

    $default  reduce using rule 11 (ext_def)


State 21

   17 struct_specifier: STRUCT ID '{' $@4 . def_list @5 '}'

    $default  reduce using rule 31 (def_list)

    def_list  go to state 26


State 22

    7 ext_def: type_specifier pointers ID '[' . $@1 unary $@2 ']' ';'

    $default  reduce using rule 5 ($@1)

    $@1  go to state 27


State 23

   19 func_decl: type_specifier pointers ID '(' . ')'
   20          | type_specifier pointers ID '(' . VOID ')'
   21          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 28
    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 29

    type_specifier    go to state 30
    struct_specifier  go to state 9
    param_list        go to state 31
    param_decl        go to state 32


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   40 compound_stmt: '{' $@10 . local_defs $@11 stmt_list '}'

    $default  reduce using rule 31 (def_list)

    def_list    go to state 33
    local_defs  go to state 34


State 26

   17 struct_specifier: STRUCT ID '{' $@4 def_list . @5 '}'
   30 def_list: def_list . def

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 16 (@5)

    type_specifier    go to state 35
    struct_specifier  go to state 9
    @5                go to state 36
    func_decl         go to state 37
    def               go to state 38


State 27

    7 ext_def: type_specifier pointers ID '[' $@1 . unary $@2 ']' ';'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 51


State 28

   19 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 19 (func_decl)


State 29

   13 type_specifier: VOID .
   20 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 52

    $default  reduce using rule 13 (type_specifier)


State 30

   26 param_decl: type_specifier . pointers ID
   29           | type_specifier . pointers ID '[' $@6 unary $@7 ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 23 (pointers)

    pointers  go to state 53


State 31

   21 func_decl: type_specifier pointers ID '(' param_list . ')'
   25 param_list: param_list . ',' param_decl

    ','  shift, and go to state 54
    ')'  shift, and go to state 55


State 32

   24 param_list: param_decl .

    $default  reduce using rule 24 (param_list)


State 33

   30 def_list: def_list . def
   41 local_defs: def_list .

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 41 (local_defs)

    type_specifier    go to state 35
    struct_specifier  go to state 9
    func_decl         go to state 37
    def               go to state 38


State 34

   40 compound_stmt: '{' $@10 local_defs . $@11 stmt_list '}'

    $default  reduce using rule 39 ($@11)

    $@11  go to state 56


State 35

   19 func_decl: type_specifier . pointers ID '(' ')'
   20          | type_specifier . pointers ID '(' VOID ')'
   21          | type_specifier . pointers ID '(' param_list ')'
   32 def: type_specifier . pointers ID ';'
   35    | type_specifier . pointers ID '[' $@8 unary $@9 ']' ';'
   36    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 57

    $default  reduce using rule 23 (pointers)

    pointers  go to state 58


State 36

   17 struct_specifier: STRUCT ID '{' $@4 def_list @5 . '}'

    '}'  shift, and go to state 59


State 37

   37 def: func_decl . ';'

    ';'  shift, and go to state 60


State 38

   30 def_list: def_list def .

    $default  reduce using rule 30 (def_list)


State 39

   88 unary: '&' . unary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 61


State 40

   82 unary: '-' . unary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 62


State 41

   89 unary: '*' . unary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 63


State 42

   83 unary: '!' . unary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 64


State 43

   86 unary: INCOP . unary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 65


State 44

   87 unary: DECOP . unary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 66


State 45

   76 unary: '(' . expr ')'
   77      | '(' . unary ')'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 67
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 73


State 46

   80 unary: STRING .

    $default  reduce using rule 80 (unary)


State 47

   79 unary: CHAR_CONST .

    $default  reduce using rule 79 (unary)


State 48

   78 unary: INTEGER_CONST .

    $default  reduce using rule 78 (unary)


State 49

   81 unary: ID .

    $default  reduce using rule 81 (unary)


State 50

   95 unary: NULL_TOKEN .

    $default  reduce using rule 95 (unary)


State 51

    7 ext_def: type_specifier pointers ID '[' $@1 unary . $@2 ']' ';'
   84 unary: unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 6 ($@2)

    $@2  go to state 80


State 52

   20 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 20 (func_decl)


State 53

   26 param_decl: type_specifier pointers . ID
   29           | type_specifier pointers . ID '[' $@6 unary $@7 ']'

    ID  shift, and go to state 81


State 54

   25 param_list: param_list ',' . param_decl

    STRUCT  shift, and go to state 4
    TYPE    shift, and go to state 5
    VOID    shift, and go to state 6

    type_specifier    go to state 30
    struct_specifier  go to state 9
    param_decl        go to state 82


State 55

   21 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 21 (func_decl)


State 56

   40 compound_stmt: '{' $@10 local_defs $@11 . stmt_list '}'

    $default  reduce using rule 43 (stmt_list)

    stmt_list  go to state 83


State 57

   36 def: type_specifier ';' .

    $default  reduce using rule 36 (def)


State 58

   19 func_decl: type_specifier pointers . ID '(' ')'
   20          | type_specifier pointers . ID '(' VOID ')'
   21          | type_specifier pointers . ID '(' param_list ')'
   32 def: type_specifier pointers . ID ';'
   35    | type_specifier pointers . ID '[' $@8 unary $@9 ']' ';'

    ID  shift, and go to state 84


State 59

   17 struct_specifier: STRUCT ID '{' $@4 def_list @5 '}' .

    $default  reduce using rule 17 (struct_specifier)


State 60

   37 def: func_decl ';' .

    $default  reduce using rule 37 (def)


State 61

   84 unary: unary . INCOP
   85      | unary . DECOP
   88      | '&' unary .
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 88 (unary)


State 62

   82 unary: '-' unary .
   84      | unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 82 (unary)


State 63

   84 unary: unary . INCOP
   85      | unary . DECOP
   89      | '*' unary .
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 89 (unary)


State 64

   83 unary: '!' unary .
   84      | unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 83 (unary)


State 65

   84 unary: unary . INCOP
   85      | unary . DECOP
   86      | INCOP unary .
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 86 (unary)


State 66

   84 unary: unary . INCOP
   85      | unary . DECOP
   87      | DECOP unary .
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 87 (unary)


State 67

   76 unary: '(' expr . ')'

    ')'  shift, and go to state 85


State 68

   64 expr: or_expr .

    $default  reduce using rule 64 (expr)


State 69

   65 or_expr: or_list .
   66 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 86

    $default  reduce using rule 65 (or_expr)


State 70

   67 or_list: and_expr .

    $default  reduce using rule 67 (or_list)


State 71

   68 and_expr: and_list .
   69 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 87

    $default  reduce using rule 68 (and_expr)


State 72

   70 and_list: binary .
   71 binary: binary . RELOP binary
   72       | binary . EQUOP binary
   73       | binary . '+' binary
   74       | binary . '-' binary

    EQUOP  shift, and go to state 88
    RELOP  shift, and go to state 89
    '+'    shift, and go to state 90
    '-'    shift, and go to state 91

    $default  reduce using rule 70 (and_list)


State 73

   63 expr: unary . '=' $@15 expr
   75 binary: unary .
   77 unary: '(' unary . ')'
   84      | unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    '='       shift, and go to state 92
    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    ')'       shift, and go to state 93
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 75 (binary)


State 74

   84 unary: unary INCOP .

    $default  reduce using rule 84 (unary)


State 75

   85 unary: unary DECOP .

    $default  reduce using rule 85 (unary)


State 76

   90 unary: unary '[' . expr ']'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 94
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 77

   93 unary: unary '(' . codegen args ')'
   94      | unary '(' . codegen ')'

    $default  reduce using rule 96 (codegen)

    codegen  go to state 96


State 78

   91 unary: unary '.' . ID

    ID  shift, and go to state 97


State 79

   92 unary: unary STRUCTOP . ID

    ID  shift, and go to state 98


State 80

    7 ext_def: type_specifier pointers ID '[' $@1 unary $@2 . ']' ';'

    ']'  shift, and go to state 99


State 81

   26 param_decl: type_specifier pointers ID .
   29           | type_specifier pointers ID . '[' $@6 unary $@7 ']'

    '['  shift, and go to state 100

    $default  reduce using rule 26 (param_decl)


State 82

   25 param_list: param_list ',' param_decl .

    $default  reduce using rule 25 (param_list)


State 83

   40 compound_stmt: '{' $@10 local_defs $@11 stmt_list . '}'
   42 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    RETURN         shift, and go to state 101
    IF             shift, and go to state 102
    WHILE          shift, and go to state 103
    FOR            shift, and go to state 104
    BREAK          shift, and go to state 105
    CONTINUE       shift, and go to state 106
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50
    ';'            shift, and go to state 107
    '{'            shift, and go to state 19
    '}'            shift, and go to state 108

    compound_stmt  go to state 109
    stmt           go to state 110
    expr           go to state 111
    or_expr        go to state 68
    or_list        go to state 69
    and_expr       go to state 70
    and_list       go to state 71
    binary         go to state 72
    unary          go to state 95


State 84

   19 func_decl: type_specifier pointers ID . '(' ')'
   20          | type_specifier pointers ID . '(' VOID ')'
   21          | type_specifier pointers ID . '(' param_list ')'
   32 def: type_specifier pointers ID . ';'
   35    | type_specifier pointers ID . '[' $@8 unary $@9 ']' ';'

    '['  shift, and go to state 112
    '('  shift, and go to state 23
    ';'  shift, and go to state 113


State 85

   76 unary: '(' expr ')' .

    $default  reduce using rule 76 (unary)


State 86

   66 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    and_expr  go to state 114
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 115


State 87

   69 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    binary  go to state 116
    unary   go to state 115


State 88

   72 binary: binary EQUOP . binary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    binary  go to state 117
    unary   go to state 115


State 89

   71 binary: binary RELOP . binary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    binary  go to state 118
    unary   go to state 115


State 90

   73 binary: binary '+' . binary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    binary  go to state 119
    unary   go to state 115


State 91

   74 binary: binary '-' . binary

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    binary  go to state 120
    unary   go to state 115


State 92

   63 expr: unary '=' . $@15 expr

    $default  reduce using rule 62 ($@15)

    $@15  go to state 121


State 93

   77 unary: '(' unary ')' .

    $default  reduce using rule 77 (unary)


State 94

   90 unary: unary '[' expr . ']'

    ']'  shift, and go to state 122


State 95

   63 expr: unary . '=' $@15 expr
   75 binary: unary .
   84 unary: unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    '='       shift, and go to state 92
    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 75 (binary)


State 96

   93 unary: unary '(' codegen . args ')'
   94      | unary '(' codegen . ')'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    ')'            shift, and go to state 123
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 124
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95
    args      go to state 125


State 97

   91 unary: unary '.' ID .

    $default  reduce using rule 91 (unary)


State 98

   92 unary: unary STRUCTOP ID .

    $default  reduce using rule 92 (unary)


State 99

    7 ext_def: type_specifier pointers ID '[' $@1 unary $@2 ']' . ';'

    ';'  shift, and go to state 126


State 100

   29 param_decl: type_specifier pointers ID '[' . $@6 unary $@7 ']'

    $default  reduce using rule 27 ($@6)

    $@6  go to state 127


State 101

   46 stmt: RETURN . return_code_gen ';'
   47     | RETURN . return_code_gen expr ';'

    $default  reduce using rule 58 (return_code_gen)

    return_code_gen  go to state 128


State 102

   49 stmt: IF . '(' expr ')' if_branch_code_gen stmt
   51     | IF . '(' expr ')' if_branch_code_gen stmt ELSE @12 stmt

    '('  shift, and go to state 129


State 103

   54 stmt: WHILE . @13 '(' expr ')' @14 stmt

    $default  reduce using rule 52 (@13)

    @13  go to state 130


State 104

   55 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 131


State 105

   56 stmt: BREAK . ';'

    ';'  shift, and go to state 132


State 106

   57 stmt: CONTINUE . ';'

    ';'  shift, and go to state 133


State 107

   48 stmt: ';' .

    $default  reduce using rule 48 (stmt)


State 108

   40 compound_stmt: '{' $@10 local_defs $@11 stmt_list '}' .

    $default  reduce using rule 40 (compound_stmt)


State 109

   45 stmt: compound_stmt .

    $default  reduce using rule 45 (stmt)


State 110

   42 stmt_list: stmt_list stmt .

    $default  reduce using rule 42 (stmt_list)


State 111

   44 stmt: expr . ';'

    ';'  shift, and go to state 134


State 112

   35 def: type_specifier pointers ID '[' . $@8 unary $@9 ']' ';'

    $default  reduce using rule 33 ($@8)

    $@8  go to state 135


State 113

   32 def: type_specifier pointers ID ';' .

    $default  reduce using rule 32 (def)


State 114

   66 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 66 (or_list)


State 115

   75 binary: unary .
   84 unary: unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 75 (binary)


State 116

   69 and_list: and_list LOGICAL_AND binary .
   71 binary: binary . RELOP binary
   72       | binary . EQUOP binary
   73       | binary . '+' binary
   74       | binary . '-' binary

    EQUOP  shift, and go to state 88
    RELOP  shift, and go to state 89
    '+'    shift, and go to state 90
    '-'    shift, and go to state 91

    $default  reduce using rule 69 (and_list)


State 117

   71 binary: binary . RELOP binary
   72       | binary . EQUOP binary
   72       | binary EQUOP binary .
   73       | binary . '+' binary
   74       | binary . '-' binary

    RELOP  shift, and go to state 89
    '+'    shift, and go to state 90
    '-'    shift, and go to state 91

    $default  reduce using rule 72 (binary)


State 118

   71 binary: binary . RELOP binary
   71       | binary RELOP binary .
   72       | binary . EQUOP binary
   73       | binary . '+' binary
   74       | binary . '-' binary

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91

    $default  reduce using rule 71 (binary)


State 119

   71 binary: binary . RELOP binary
   72       | binary . EQUOP binary
   73       | binary . '+' binary
   73       | binary '+' binary .
   74       | binary . '-' binary

    $default  reduce using rule 73 (binary)


State 120

   71 binary: binary . RELOP binary
   72       | binary . EQUOP binary
   73       | binary . '+' binary
   74       | binary . '-' binary
   74       | binary '-' binary .

    $default  reduce using rule 74 (binary)


State 121

   63 expr: unary '=' $@15 . expr

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 136
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 122

   90 unary: unary '[' expr ']' .

    $default  reduce using rule 90 (unary)


State 123

   94 unary: unary '(' codegen ')' .

    $default  reduce using rule 94 (unary)


State 124

   97 args: expr .

    $default  reduce using rule 97 (args)


State 125

   93 unary: unary '(' codegen args . ')'
   98 args: args . ',' expr

    ','  shift, and go to state 137
    ')'  shift, and go to state 138


State 126

    7 ext_def: type_specifier pointers ID '[' $@1 unary $@2 ']' ';' .

    $default  reduce using rule 7 (ext_def)


State 127

   29 param_decl: type_specifier pointers ID '[' $@6 . unary $@7 ']'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 139


State 128

   46 stmt: RETURN return_code_gen . ';'
   47     | RETURN return_code_gen . expr ';'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50
    ';'            shift, and go to state 140

    expr      go to state 141
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 129

   49 stmt: IF '(' . expr ')' if_branch_code_gen stmt
   51     | IF '(' . expr ')' if_branch_code_gen stmt ELSE @12 stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 142
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 130

   54 stmt: WHILE @13 . '(' expr ')' @14 stmt

    '('  shift, and go to state 143


State 131

   55 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    $default  reduce using rule 61 (expr_e)

    expr_e    go to state 144
    expr      go to state 145
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 132

   56 stmt: BREAK ';' .

    $default  reduce using rule 56 (stmt)


State 133

   57 stmt: CONTINUE ';' .

    $default  reduce using rule 57 (stmt)


State 134

   44 stmt: expr ';' .

    $default  reduce using rule 44 (stmt)


State 135

   35 def: type_specifier pointers ID '[' $@8 . unary $@9 ']' ';'

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    unary  go to state 146


State 136

   63 expr: unary '=' $@15 expr .

    $default  reduce using rule 63 (expr)


State 137

   98 args: args ',' . expr

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 147
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 138

   93 unary: unary '(' codegen args ')' .

    $default  reduce using rule 93 (unary)


State 139

   29 param_decl: type_specifier pointers ID '[' $@6 unary . $@7 ']'
   84 unary: unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 28 ($@7)

    $@7  go to state 148


State 140

   46 stmt: RETURN return_code_gen ';' .

    $default  reduce using rule 46 (stmt)


State 141

   47 stmt: RETURN return_code_gen expr . ';'

    ';'  shift, and go to state 149


State 142

   49 stmt: IF '(' expr . ')' if_branch_code_gen stmt
   51     | IF '(' expr . ')' if_branch_code_gen stmt ELSE @12 stmt

    ')'  shift, and go to state 150


State 143

   54 stmt: WHILE @13 '(' . expr ')' @14 stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    expr      go to state 151
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 144

   55 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 152


State 145

   60 expr_e: expr .

    $default  reduce using rule 60 (expr_e)


State 146

   35 def: type_specifier pointers ID '[' $@8 unary . $@9 ']' ';'
   84 unary: unary . INCOP
   85      | unary . DECOP
   90      | unary . '[' expr ']'
   91      | unary . '.' ID
   92      | unary . STRUCTOP ID
   93      | unary . '(' codegen args ')'
   94      | unary . '(' codegen ')'

    INCOP     shift, and go to state 74
    DECOP     shift, and go to state 75
    '['       shift, and go to state 76
    '('       shift, and go to state 77
    '.'       shift, and go to state 78
    STRUCTOP  shift, and go to state 79

    $default  reduce using rule 34 ($@9)

    $@9  go to state 153


State 147

   98 args: args ',' expr .

    $default  reduce using rule 98 (args)


State 148

   29 param_decl: type_specifier pointers ID '[' $@6 unary $@7 . ']'

    ']'  shift, and go to state 154


State 149

   47 stmt: RETURN return_code_gen expr ';' .

    $default  reduce using rule 47 (stmt)


State 150

   49 stmt: IF '(' expr ')' . if_branch_code_gen stmt
   51     | IF '(' expr ')' . if_branch_code_gen stmt ELSE @12 stmt

    $default  reduce using rule 59 (if_branch_code_gen)

    if_branch_code_gen  go to state 155


State 151

   54 stmt: WHILE @13 '(' expr . ')' @14 stmt

    ')'  shift, and go to state 156


State 152

   55 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    $default  reduce using rule 61 (expr_e)

    expr_e    go to state 157
    expr      go to state 145
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 153

   35 def: type_specifier pointers ID '[' $@8 unary $@9 . ']' ';'

    ']'  shift, and go to state 158


State 154

   29 param_decl: type_specifier pointers ID '[' $@6 unary $@7 ']' .

    $default  reduce using rule 29 (param_decl)


State 155

   49 stmt: IF '(' expr ')' if_branch_code_gen . stmt
   51     | IF '(' expr ')' if_branch_code_gen . stmt ELSE @12 stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    RETURN         shift, and go to state 101
    IF             shift, and go to state 102
    WHILE          shift, and go to state 103
    FOR            shift, and go to state 104
    BREAK          shift, and go to state 105
    CONTINUE       shift, and go to state 106
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50
    ';'            shift, and go to state 107
    '{'            shift, and go to state 19

    compound_stmt  go to state 109
    stmt           go to state 159
    expr           go to state 111
    or_expr        go to state 68
    or_list        go to state 69
    and_expr       go to state 70
    and_list       go to state 71
    binary         go to state 72
    unary          go to state 95


State 156

   54 stmt: WHILE @13 '(' expr ')' . @14 stmt

    $default  reduce using rule 53 (@14)

    @14  go to state 160


State 157

   55 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 161


State 158

   35 def: type_specifier pointers ID '[' $@8 unary $@9 ']' . ';'

    ';'  shift, and go to state 162


State 159

   49 stmt: IF '(' expr ')' if_branch_code_gen stmt .
   51     | IF '(' expr ')' if_branch_code_gen stmt . ELSE @12 stmt

    ELSE  shift, and go to state 163

    $default  reduce using rule 49 (stmt)


State 160

   54 stmt: WHILE @13 '(' expr ')' @14 . stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    RETURN         shift, and go to state 101
    IF             shift, and go to state 102
    WHILE          shift, and go to state 103
    FOR            shift, and go to state 104
    BREAK          shift, and go to state 105
    CONTINUE       shift, and go to state 106
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50
    ';'            shift, and go to state 107
    '{'            shift, and go to state 19

    compound_stmt  go to state 109
    stmt           go to state 164
    expr           go to state 111
    or_expr        go to state 68
    or_list        go to state 69
    and_expr       go to state 70
    and_list       go to state 71
    binary         go to state 72
    unary          go to state 95


State 161

   55 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50

    $default  reduce using rule 61 (expr_e)

    expr_e    go to state 165
    expr      go to state 145
    or_expr   go to state 68
    or_list   go to state 69
    and_expr  go to state 70
    and_list  go to state 71
    binary    go to state 72
    unary     go to state 95


State 162

   35 def: type_specifier pointers ID '[' $@8 unary $@9 ']' ';' .

    $default  reduce using rule 35 (def)


State 163

   51 stmt: IF '(' expr ')' if_branch_code_gen stmt ELSE . @12 stmt

    $default  reduce using rule 50 (@12)

    @12  go to state 166


State 164

   54 stmt: WHILE @13 '(' expr ')' @14 stmt .

    $default  reduce using rule 54 (stmt)


State 165

   55 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 167


State 166

   51 stmt: IF '(' expr ')' if_branch_code_gen stmt ELSE @12 . stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    RETURN         shift, and go to state 101
    IF             shift, and go to state 102
    WHILE          shift, and go to state 103
    FOR            shift, and go to state 104
    BREAK          shift, and go to state 105
    CONTINUE       shift, and go to state 106
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50
    ';'            shift, and go to state 107
    '{'            shift, and go to state 19

    compound_stmt  go to state 109
    stmt           go to state 168
    expr           go to state 111
    or_expr        go to state 68
    or_list        go to state 69
    and_expr       go to state 70
    and_list       go to state 71
    binary         go to state 72
    unary          go to state 95


State 167

   55 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 39
    '-'            shift, and go to state 40
    '*'            shift, and go to state 41
    '!'            shift, and go to state 42
    INCOP          shift, and go to state 43
    DECOP          shift, and go to state 44
    '('            shift, and go to state 45
    RETURN         shift, and go to state 101
    IF             shift, and go to state 102
    WHILE          shift, and go to state 103
    FOR            shift, and go to state 104
    BREAK          shift, and go to state 105
    CONTINUE       shift, and go to state 106
    STRING         shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    INTEGER_CONST  shift, and go to state 48
    ID             shift, and go to state 49
    NULL_TOKEN     shift, and go to state 50
    ';'            shift, and go to state 107
    '{'            shift, and go to state 19

    compound_stmt  go to state 109
    stmt           go to state 169
    expr           go to state 111
    or_expr        go to state 68
    or_list        go to state 69
    and_expr       go to state 70
    and_list       go to state 71
    binary         go to state 72
    unary          go to state 95


State 168

   51 stmt: IF '(' expr ')' if_branch_code_gen stmt ELSE @12 stmt .

    $default  reduce using rule 51 (stmt)


State 169

   55 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 55 (stmt)
