Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 struct_specifier: STRUCT ID '{' def_list '}'
   13                 | STRUCT ID

   14 func_decl: type_specifier pointers ID '(' ')'
   15          | type_specifier pointers ID '(' VOID ')'
   16          | type_specifier pointers ID '(' param_list ')'

   17 pointers: '*'
   18         | %empty

   19 param_list: param_decl
   20           | param_list ',' param_decl

   21 param_decl: type_specifier pointers ID
   22           | type_specifier pointers ID '[' const_expr ']'

   23 def_list: def_list def
   24         | %empty

   25 def: type_specifier pointers ID ';'
   26    | type_specifier pointers ID '[' const_expr ']' ';'
   27    | type_specifier ';'
   28    | func_decl ';'

   29 $@1: %empty

   30 compound_stmt: '{' $@1 local_defs stmt_list '}'

   31 local_defs: def_list

   32 stmt_list: stmt_list stmt
   33          | %empty

   34 stmt: expr ';'
   35     | compound_stmt
   36     | RETURN ';'
   37     | RETURN expr ';'
   38     | ';'
   39     | IF '(' expr ')' stmt
   40     | IF '(' expr ')' stmt ELSE stmt
   41     | WHILE '(' expr ')' stmt
   42     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   43     | BREAK ';'
   44     | CONTINUE ';'

   45 expr_e: expr
   46       | %empty

   47 const_expr: expr

   48 expr: unary '=' expr
   49     | or_expr

   50 or_expr: or_list

   51 or_list: or_list LOGICAL_OR and_expr
   52        | and_expr

   53 and_expr: and_list

   54 and_list: and_list LOGICAL_AND binary
   55         | binary

   56 binary: binary RELOP binary
   57       | binary EQUOP binary
   58       | binary '+' binary
   59       | binary '-' binary
   60       | unary

   61 unary: '(' expr ')'
   62      | '(' unary ')'
   63      | INTEGER_CONST
   64      | CHAR_CONST
   65      | STRING
   66      | ID
   67      | '-' unary
   68      | '!' unary
   69      | unary INCOP
   70      | unary DECOP
   71      | INCOP unary
   72      | DECOP unary
   73      | '&' unary
   74      | '*' unary
   75      | unary '[' expr ']'
   76      | unary '.' ID
   77      | unary STRUCTOP ID
   78      | unary '(' args ')'
   79      | unary '(' ')'

   80 args: expr
   81     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 68
'&' (38) 73
'(' (40) 14 15 16 39 40 41 42 61 62 78 79
')' (41) 14 15 16 39 40 41 42 61 62 78 79
'*' (42) 17 74
'+' (43) 58
',' (44) 20 81
'-' (45) 59 67
'.' (46) 76
';' (59) 4 5 6 7 25 26 27 28 34 36 37 38 42 43 44
'=' (61) 48
'[' (91) 5 22 26 75
']' (93) 5 22 26 75
'{' (123) 12 30
'}' (125) 12 30
error (256)
LOGICAL_OR (258) 51
LOGICAL_AND (259) 54
EQUOP (260) 57
RELOP (261) 56
INCOP (262) 69 71
DECOP (263) 70 72
STRUCTOP (264) 77
ELSE (265) 40
VOID (266) 10 15
STRUCT (267) 12 13
RETURN (268) 36 37
IF (269) 39 40
WHILE (270) 41
FOR (271) 42
BREAK (272) 43
CONTINUE (273) 44
CHAR_CONST (274) 64
STRING (275) 65
TYPE (276) 9
INTEGER_CONST (277) 63
ID (278) 4 5 12 13 14 15 16 21 22 25 26 66 76 77


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
ext_def_list (41)
    on left: 2 3, on right: 1 2
ext_def (42)
    on left: 4 5 6 7 8, on right: 2
type_specifier (43)
    on left: 9 10 11, on right: 4 5 7 14 15 16 21 22 25 26 27
struct_specifier (44)
    on left: 12 13, on right: 11
func_decl (45)
    on left: 14 15 16, on right: 6 8 28
pointers (46)
    on left: 17 18, on right: 4 5 14 15 16 21 22 25 26
param_list (47)
    on left: 19 20, on right: 16 20
param_decl (48)
    on left: 21 22, on right: 19 20
def_list (49)
    on left: 23 24, on right: 12 23 31
def (50)
    on left: 25 26 27 28, on right: 23
compound_stmt (51)
    on left: 30, on right: 8 35
$@1 (52)
    on left: 29, on right: 30
local_defs (53)
    on left: 31, on right: 30
stmt_list (54)
    on left: 32 33, on right: 30 32
stmt (55)
    on left: 34 35 36 37 38 39 40 41 42 43 44, on right: 32 39 40 41
    42
expr_e (56)
    on left: 45 46, on right: 42
const_expr (57)
    on left: 47, on right: 5 22 26
expr (58)
    on left: 48 49, on right: 34 37 39 40 41 45 47 48 61 75 80 81
or_expr (59)
    on left: 50, on right: 49
or_list (60)
    on left: 51 52, on right: 50 51
and_expr (61)
    on left: 53, on right: 51 52
and_list (62)
    on left: 54 55, on right: 53 54
binary (63)
    on left: 56 57 58 59 60, on right: 54 55 56 57 58 59
unary (64)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79, on right: 48 60 62 67 68 69 70 71 72 73 74 75 76 77 78 79
args (65)
    on left: 80 81, on right: 78 81


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 5

   12 struct_specifier: STRUCT . ID '{' def_list '}'
   13                 | STRUCT . ID

    ID  shift, and go to state 11


State 6

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   14 func_decl: type_specifier . pointers ID '(' ')'
   15          | type_specifier . pointers ID '(' VOID ')'
   16          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 18 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   12 struct_specifier: STRUCT ID . '{' def_list '}'
   13                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 13 (struct_specifier)


State 12

   17 pointers: '*' .

    $default  reduce using rule 17 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   14 func_decl: type_specifier pointers . ID '(' ')'
   15          | type_specifier pointers . ID '(' VOID ')'
   16          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   30 compound_stmt: '{' . $@1 local_defs stmt_list '}'

    $default  reduce using rule 29 ($@1)

    $@1  go to state 20


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   12 struct_specifier: STRUCT ID '{' . def_list '}'

    $default  reduce using rule 24 (def_list)

    def_list  go to state 21


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   14 func_decl: type_specifier pointers ID . '(' ')'
   15          | type_specifier pointers ID . '(' VOID ')'
   16          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 20

   30 compound_stmt: '{' $@1 . local_defs stmt_list '}'

    $default  reduce using rule 24 (def_list)

    def_list    go to state 25
    local_defs  go to state 26


State 21

   12 struct_specifier: STRUCT ID '{' def_list . '}'
   23 def_list: def_list . def

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6
    '}'     shift, and go to state 27

    type_specifier    go to state 28
    struct_specifier  go to state 9
    func_decl         go to state 29
    def               go to state 30


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    const_expr  go to state 42
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 23

   14 func_decl: type_specifier pointers ID '(' . ')'
   15          | type_specifier pointers ID '(' . VOID ')'
   16          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 50
    VOID    shift, and go to state 51
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    type_specifier    go to state 52
    struct_specifier  go to state 9
    param_list        go to state 53
    param_decl        go to state 54


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   23 def_list: def_list . def
   31 local_defs: def_list .

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    $default  reduce using rule 31 (local_defs)

    type_specifier    go to state 28
    struct_specifier  go to state 9
    func_decl         go to state 29
    def               go to state 30


State 26

   30 compound_stmt: '{' $@1 local_defs . stmt_list '}'

    $default  reduce using rule 33 (stmt_list)

    stmt_list  go to state 55


State 27

   12 struct_specifier: STRUCT ID '{' def_list '}' .

    $default  reduce using rule 12 (struct_specifier)


State 28

   14 func_decl: type_specifier . pointers ID '(' ')'
   15          | type_specifier . pointers ID '(' VOID ')'
   16          | type_specifier . pointers ID '(' param_list ')'
   25 def: type_specifier . pointers ID ';'
   26    | type_specifier . pointers ID '[' const_expr ']' ';'
   27    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 56

    $default  reduce using rule 18 (pointers)

    pointers  go to state 57


State 29

   28 def: func_decl . ';'

    ';'  shift, and go to state 58


State 30

   23 def_list: def_list def .

    $default  reduce using rule 23 (def_list)


State 31

   73 unary: '&' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    unary  go to state 59


State 32

   67 unary: '-' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    unary  go to state 60


State 33

   74 unary: '*' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    unary  go to state 61


State 34

   68 unary: '!' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    unary  go to state 62


State 35

   71 unary: INCOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    unary  go to state 63


State 36

   72 unary: DECOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    unary  go to state 64


State 37

   61 unary: '(' . expr ')'
   62      | '(' . unary ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 65
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 66


State 38

   64 unary: CHAR_CONST .

    $default  reduce using rule 64 (unary)


State 39

   65 unary: STRING .

    $default  reduce using rule 65 (unary)


State 40

   63 unary: INTEGER_CONST .

    $default  reduce using rule 63 (unary)


State 41

   66 unary: ID .

    $default  reduce using rule 66 (unary)


State 42

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 67


State 43

   47 const_expr: expr .

    $default  reduce using rule 47 (const_expr)


State 44

   49 expr: or_expr .

    $default  reduce using rule 49 (expr)


State 45

   50 or_expr: or_list .
   51 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 68

    $default  reduce using rule 50 (or_expr)


State 46

   52 or_list: and_expr .

    $default  reduce using rule 52 (or_list)


State 47

   53 and_expr: and_list .
   54 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 69

    $default  reduce using rule 53 (and_expr)


State 48

   55 and_list: binary .
   56 binary: binary . RELOP binary
   57       | binary . EQUOP binary
   58       | binary . '+' binary
   59       | binary . '-' binary

    EQUOP  shift, and go to state 70
    RELOP  shift, and go to state 71
    '+'    shift, and go to state 72
    '-'    shift, and go to state 73

    $default  reduce using rule 55 (and_list)


State 49

   48 expr: unary . '=' expr
   60 binary: unary .
   69 unary: unary . INCOP
   70      | unary . DECOP
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    '='       shift, and go to state 74
    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 60 (binary)


State 50

   14 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 14 (func_decl)


State 51

   10 type_specifier: VOID .
   15 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 81

    $default  reduce using rule 10 (type_specifier)


State 52

   21 param_decl: type_specifier . pointers ID
   22           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 18 (pointers)

    pointers  go to state 82


State 53

   16 func_decl: type_specifier pointers ID '(' param_list . ')'
   20 param_list: param_list . ',' param_decl

    ','  shift, and go to state 83
    ')'  shift, and go to state 84


State 54

   19 param_list: param_decl .

    $default  reduce using rule 19 (param_list)


State 55

   30 compound_stmt: '{' $@1 local_defs stmt_list . '}'
   32 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41
    ';'            shift, and go to state 91
    '{'            shift, and go to state 16
    '}'            shift, and go to state 92

    compound_stmt  go to state 93
    stmt           go to state 94
    expr           go to state 95
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 56

   27 def: type_specifier ';' .

    $default  reduce using rule 27 (def)


State 57

   14 func_decl: type_specifier pointers . ID '(' ')'
   15          | type_specifier pointers . ID '(' VOID ')'
   16          | type_specifier pointers . ID '(' param_list ')'
   25 def: type_specifier pointers . ID ';'
   26    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 96


State 58

   28 def: func_decl ';' .

    $default  reduce using rule 28 (def)


State 59

   69 unary: unary . INCOP
   70      | unary . DECOP
   73      | '&' unary .
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 73 (unary)


State 60

   67 unary: '-' unary .
   69      | unary . INCOP
   70      | unary . DECOP
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 67 (unary)


State 61

   69 unary: unary . INCOP
   70      | unary . DECOP
   74      | '*' unary .
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 74 (unary)


State 62

   68 unary: '!' unary .
   69      | unary . INCOP
   70      | unary . DECOP
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 68 (unary)


State 63

   69 unary: unary . INCOP
   70      | unary . DECOP
   71      | INCOP unary .
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 71 (unary)


State 64

   69 unary: unary . INCOP
   70      | unary . DECOP
   72      | DECOP unary .
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 72 (unary)


State 65

   61 unary: '(' expr . ')'

    ')'  shift, and go to state 97


State 66

   48 expr: unary . '=' expr
   60 binary: unary .
   62 unary: '(' unary . ')'
   69      | unary . INCOP
   70      | unary . DECOP
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    '='       shift, and go to state 74
    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    ')'       shift, and go to state 98
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 60 (binary)


State 67

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 99


State 68

   51 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    and_expr  go to state 100
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 101


State 69

   54 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    binary  go to state 102
    unary   go to state 101


State 70

   57 binary: binary EQUOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    binary  go to state 103
    unary   go to state 101


State 71

   56 binary: binary RELOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    binary  go to state 104
    unary   go to state 101


State 72

   58 binary: binary '+' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    binary  go to state 105
    unary   go to state 101


State 73

   59 binary: binary '-' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    binary  go to state 106
    unary   go to state 101


State 74

   48 expr: unary '=' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 107
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 75

   69 unary: unary INCOP .

    $default  reduce using rule 69 (unary)


State 76

   70 unary: unary DECOP .

    $default  reduce using rule 70 (unary)


State 77

   75 unary: unary '[' . expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 108
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 78

   78 unary: unary '(' . args ')'
   79      | unary '(' . ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ')'            shift, and go to state 109
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 110
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49
    args      go to state 111


State 79

   76 unary: unary '.' . ID

    ID  shift, and go to state 112


State 80

   77 unary: unary STRUCTOP . ID

    ID  shift, and go to state 113


State 81

   15 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 15 (func_decl)


State 82

   21 param_decl: type_specifier pointers . ID
   22           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 114


State 83

   20 param_list: param_list ',' . param_decl

    VOID    shift, and go to state 4
    STRUCT  shift, and go to state 5
    TYPE    shift, and go to state 6

    type_specifier    go to state 52
    struct_specifier  go to state 9
    param_decl        go to state 115


State 84

   16 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 16 (func_decl)


State 85

   36 stmt: RETURN . ';'
   37     | RETURN . expr ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41
    ';'            shift, and go to state 116

    expr      go to state 117
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 86

   39 stmt: IF . '(' expr ')' stmt
   40     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 118


State 87

   41 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 119


State 88

   42 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 120


State 89

   43 stmt: BREAK . ';'

    ';'  shift, and go to state 121


State 90

   44 stmt: CONTINUE . ';'

    ';'  shift, and go to state 122


State 91

   38 stmt: ';' .

    $default  reduce using rule 38 (stmt)


State 92

   30 compound_stmt: '{' $@1 local_defs stmt_list '}' .

    $default  reduce using rule 30 (compound_stmt)


State 93

   35 stmt: compound_stmt .

    $default  reduce using rule 35 (stmt)


State 94

   32 stmt_list: stmt_list stmt .

    $default  reduce using rule 32 (stmt_list)


State 95

   34 stmt: expr . ';'

    ';'  shift, and go to state 123


State 96

   14 func_decl: type_specifier pointers ID . '(' ')'
   15          | type_specifier pointers ID . '(' VOID ')'
   16          | type_specifier pointers ID . '(' param_list ')'
   25 def: type_specifier pointers ID . ';'
   26    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 124
    '('  shift, and go to state 23
    ';'  shift, and go to state 125


State 97

   61 unary: '(' expr ')' .

    $default  reduce using rule 61 (unary)


State 98

   62 unary: '(' unary ')' .

    $default  reduce using rule 62 (unary)


State 99

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 100

   51 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 51 (or_list)


State 101

   60 binary: unary .
   69 unary: unary . INCOP
   70      | unary . DECOP
   75      | unary . '[' expr ']'
   76      | unary . '.' ID
   77      | unary . STRUCTOP ID
   78      | unary . '(' args ')'
   79      | unary . '(' ')'

    INCOP     shift, and go to state 75
    DECOP     shift, and go to state 76
    '['       shift, and go to state 77
    '('       shift, and go to state 78
    '.'       shift, and go to state 79
    STRUCTOP  shift, and go to state 80

    $default  reduce using rule 60 (binary)


State 102

   54 and_list: and_list LOGICAL_AND binary .
   56 binary: binary . RELOP binary
   57       | binary . EQUOP binary
   58       | binary . '+' binary
   59       | binary . '-' binary

    EQUOP  shift, and go to state 70
    RELOP  shift, and go to state 71
    '+'    shift, and go to state 72
    '-'    shift, and go to state 73

    $default  reduce using rule 54 (and_list)


State 103

   56 binary: binary . RELOP binary
   57       | binary . EQUOP binary
   57       | binary EQUOP binary .
   58       | binary . '+' binary
   59       | binary . '-' binary

    RELOP  shift, and go to state 71
    '+'    shift, and go to state 72
    '-'    shift, and go to state 73

    $default  reduce using rule 57 (binary)


State 104

   56 binary: binary . RELOP binary
   56       | binary RELOP binary .
   57       | binary . EQUOP binary
   58       | binary . '+' binary
   59       | binary . '-' binary

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 56 (binary)


State 105

   56 binary: binary . RELOP binary
   57       | binary . EQUOP binary
   58       | binary . '+' binary
   58       | binary '+' binary .
   59       | binary . '-' binary

    $default  reduce using rule 58 (binary)


State 106

   56 binary: binary . RELOP binary
   57       | binary . EQUOP binary
   58       | binary . '+' binary
   59       | binary . '-' binary
   59       | binary '-' binary .

    $default  reduce using rule 59 (binary)


State 107

   48 expr: unary '=' expr .

    $default  reduce using rule 48 (expr)


State 108

   75 unary: unary '[' expr . ']'

    ']'  shift, and go to state 126


State 109

   79 unary: unary '(' ')' .

    $default  reduce using rule 79 (unary)


State 110

   80 args: expr .

    $default  reduce using rule 80 (args)


State 111

   78 unary: unary '(' args . ')'
   81 args: args . ',' expr

    ','  shift, and go to state 127
    ')'  shift, and go to state 128


State 112

   76 unary: unary '.' ID .

    $default  reduce using rule 76 (unary)


State 113

   77 unary: unary STRUCTOP ID .

    $default  reduce using rule 77 (unary)


State 114

   21 param_decl: type_specifier pointers ID .
   22           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 129

    $default  reduce using rule 21 (param_decl)


State 115

   20 param_list: param_list ',' param_decl .

    $default  reduce using rule 20 (param_list)


State 116

   36 stmt: RETURN ';' .

    $default  reduce using rule 36 (stmt)


State 117

   37 stmt: RETURN expr . ';'

    ';'  shift, and go to state 130


State 118

   39 stmt: IF '(' . expr ')' stmt
   40     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 131
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 119

   41 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 132
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 120

   42 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    $default  reduce using rule 46 (expr_e)

    expr_e    go to state 133
    expr      go to state 134
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 121

   43 stmt: BREAK ';' .

    $default  reduce using rule 43 (stmt)


State 122

   44 stmt: CONTINUE ';' .

    $default  reduce using rule 44 (stmt)


State 123

   34 stmt: expr ';' .

    $default  reduce using rule 34 (stmt)


State 124

   26 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    const_expr  go to state 135
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 125

   25 def: type_specifier pointers ID ';' .

    $default  reduce using rule 25 (def)


State 126

   75 unary: unary '[' expr ']' .

    $default  reduce using rule 75 (unary)


State 127

   81 args: args ',' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    expr      go to state 136
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 128

   78 unary: unary '(' args ')' .

    $default  reduce using rule 78 (unary)


State 129

   22 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    const_expr  go to state 137
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 130

   37 stmt: RETURN expr ';' .

    $default  reduce using rule 37 (stmt)


State 131

   39 stmt: IF '(' expr . ')' stmt
   40     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 138


State 132

   41 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 139


State 133

   42 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 140


State 134

   45 expr_e: expr .

    $default  reduce using rule 45 (expr_e)


State 135

   26 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 141


State 136

   81 args: args ',' expr .

    $default  reduce using rule 81 (args)


State 137

   22 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 142


State 138

   39 stmt: IF '(' expr ')' . stmt
   40     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41
    ';'            shift, and go to state 91
    '{'            shift, and go to state 16

    compound_stmt  go to state 93
    stmt           go to state 143
    expr           go to state 95
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 139

   41 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41
    ';'            shift, and go to state 91
    '{'            shift, and go to state 16

    compound_stmt  go to state 93
    stmt           go to state 144
    expr           go to state 95
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 140

   42 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    $default  reduce using rule 46 (expr_e)

    expr_e    go to state 145
    expr      go to state 134
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 141

   26 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 146


State 142

   22 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 22 (param_decl)


State 143

   39 stmt: IF '(' expr ')' stmt .
   40     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 147

    $default  reduce using rule 39 (stmt)


State 144

   41 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 41 (stmt)


State 145

   42 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 148


State 146

   26 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 26 (def)


State 147

   40 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41
    ';'            shift, and go to state 91
    '{'            shift, and go to state 16

    compound_stmt  go to state 93
    stmt           go to state 149
    expr           go to state 95
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 148

   42 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41

    $default  reduce using rule 46 (expr_e)

    expr_e    go to state 150
    expr      go to state 134
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 149

   40 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 40 (stmt)


State 150

   42 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 151


State 151

   42 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    CHAR_CONST     shift, and go to state 38
    STRING         shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    ID             shift, and go to state 41
    ';'            shift, and go to state 91
    '{'            shift, and go to state 16

    compound_stmt  go to state 93
    stmt           go to state 152
    expr           go to state 95
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 152

   42 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 42 (stmt)
