=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : c, decl class : 1
node name : b, decl class : 0
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : d, decl class : 0
node name : c, decl class : 1
node name : b, decl class : 0
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
../open_test/ptr_op.c:9: error:LHS is not a variable
../open_test/ptr_op.c:13: error:not variable
../open_test/ptr_op.c:13: error:LHS and RHS are not same type
../open_test/ptr_op.c:15: error:LHS and RHS are not same type
../open_test/ptr_op.c:16: error:not computable
../open_test/ptr_op.c:16: error:not a pointer
../open_test/ptr_op.c:16: error:not variable
../open_test/ptr_op.c:16: error:LHS and RHS are not same type
../open_test/ptr_op.c:17: error:not computable
../open_test/ptr_op.c:17: error:LHS and RHS are not same type
../open_test/ptr_op.c:18: error:not computable
../open_test/ptr_op.c:18: error:LHS and RHS are not same type
../open_test/ptr_op.c:20: error:LHS and RHS are not same type
../open_test/ptr_op.c:21: error:LHS and RHS are not same type
../open_test/ptr_op.c:23: error:LHS and RHS are not same type
../open_test/ptr_op.c:24: error:not computable
../open_test/ptr_op.c:24: error:not variable
../open_test/ptr_op.c:24: error:LHS and RHS are not same type
../open_test/ptr_op.c:25: error:not computable
../open_test/ptr_op.c:25: error:not a pointer
../open_test/ptr_op.c:25: error:not variable
../open_test/ptr_op.c:25: error:LHS and RHS are not same type
../open_test/ptr_op.c:27: error:not int or char type
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
=====stack #1 from the top=====
node name : d, decl class : 0
node name : c, decl class : 1
node name : b, decl class : 0
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #2 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : d, decl class : 0
node name : c, decl class : 1
node name : b, decl class : 0
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : d, decl class : 0
node name : c, decl class : 1
node name : b, decl class : 0
node name : a, decl class : 1
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : main, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
