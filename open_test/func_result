=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : c, decl class : 0
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
../open_test/func_op.c:14: error:not computable
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : c, decl class : 0
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : c, decl class : 0
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : d, decl class : 0
node name : c, decl class : 0
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
../open_test/func_op.c:28: error:actual args are not equal to formal args
../open_test/func_op.c:28: error:LHS and RHS are not same type
../open_test/func_op.c:29: error:actual args are not equal to formal args
../open_test/func_op.c:29: error:LHS and RHS are not same type
../open_test/func_op.c:33: error:actual args are not equal to formal args
../open_test/func_op.c:35: error:LHS and RHS are not same type
../open_test/func_op.c:36: error:actual args are not equal to formal args
../open_test/func_op.c:36: error:LHS and RHS are not same type
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : d, decl class : 0
node name : c, decl class : 0
node name : b, decl class : 0
node name : a, decl class : 0
node name : *return, decl class : 3
=====stack #1 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
=============PRINT SCOPE STACK=============
=====stack #0 from the top=====
node name : main, decl class : 2
node name : func3, decl class : 2
node name : func2, decl class : 2
node name : func1, decl class : 2
=====Final Stack from the top=====
node name : string, decl class : 3
node name : void, decl class : 3
node name : char, decl class : 3
node name : int, decl class : 3
===========================================
